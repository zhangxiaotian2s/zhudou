{"dependencies":{"nuclide-client":"0.0.35","nuclide-debugger-utils":"0.0.35","nuclide-logging":"0.0.35","nuclide-remote-uri":"0.0.35","ws":"0.7.1"},"description":"Allows Debugging of hhvm from Nuclide","devDependencies":{"nuclide-debugger-interfaces":"0.0.35","nuclide-home-interfaces":"0.0.35"},"engines":{"atom":">=1.1.0"},"license":"SEE LICENSE IN LICENSE","main":"./lib/main","name":"nuclide-debugger-hhvm","nuclide":{"config":{"endDebugWhenNoRequests":{"default":false,"description":"Whether or not to end debug session when there is no http requests.","type":"boolean"},"idekeyRegex":{"default":"","description":"Regular expression to filter connection idekey. Usually your OS user id.","type":"string"},"logLevel":{"default":"INFO","description":"Specify that level of logging from debugger, supported values: ALL | TRACE | DEBUG | INFO | WARN | ERROR | FATAL | OFF.","type":"string"},"scriptRegex":{"default":"^(?!/var.*)","description":"Regular expression to filter connection script path.","type":"string"},"xdebugPort":{"default":9000,"description":"Port for DBGP connection to HHVM.","type":"number"}},"packageType":"Atom","testRunner":"apm"},"providedServices":{"nuclide-debugger-hhvm-service":{"description":"Debugger backend for remote hhvm processes.","versions":{"0.0.0":"provideNuclideDebuggerHhvm"}},"nuclide-home.homeFragments":{"versions":{"0.0.0":"getHomeFragments"}}},"repository":{"type":"git","url":"git+https://github.com/facebooknuclideapm/nuclide-debugger-hhvm.git"},"version":"0.0.35","readme":"**NOTE:** The official repository for this package is https://github.com/facebook/nuclide.\nPlease file all issues and pull requests there.\n\n# HHVM Debugger\n\nThis package enables debugging HHVM processes on a remote machine.\n\n## Setup\n\n- Ensure HHVM is setup to enable XDebug(aka Dbgp) debugging.\n\nFor command line script debugging, you will need to create a `config.ini` file to enable xdebug debugging.\nAn example config file is:\n\n    xdebug.enable = 1\n    xdebug.remote_enable = 1\n    xdebug.remote_autostart = 1\n    xdebug.overload_var_dump = 0\n    xdebug.remote_port = 9000\n\nFor server debugging, add the following to HHVM's config.hdl:\n\n    Eval.Debugger {\n      XDebugEnable = true\n      XDebugDefaultEnable = true\n      XDebugOverloadVarDump = 0\n      XDebugRemoteEnable = true\n      XDebugRemoteAutostart = true\n    }\n\n- Add the remote directory containing the PHP source code on your project using either:\n - `Packages - Connect...` menu.\n - Right click on the tree and click `Add Remote Project Folder`\n\n## Attaching to your Debuggee\n\n- Open the Attach UI with `Cmd - Shift - Y`\n- Click on the `Process ID` drop down.\n\n![Attach UI](./images/Attach.png)\n\n- Select the item showing `hhvm: your-remote-machine-name`\n\n![Process List](./images/ProcessList.png)\n\n- Click `Attach` Button\n\nYou will see the Attach Waiting UI:\n\n![Attach Waiting](./images/AttachWaiting.png)\n\n- Start the PHP script that you want to debug.\n\nWhen running HHVM in server mode, load the URL of the script you want to debug in your web browser.\nTo debug a command line script, invoke HHVM with your config.ini and the script to be debugged:\n\n    hhvm -c config.ini my-script.php\n\nUpon starting the script, HHVM will connect to the Nuclide debugger. This may take a while - up to a minute or so.\n\nOn successful attach, the Attach Waiting UI will be replaced by the Debug UI. If the attach was unsuccessful you will be returned to the Attach to Process UI.\n\n## Debugging\n\nOnce attached you will see the Debugger UI:\n\n![Debugger](./images/Debugger.png)\n\nThis UI may look familiar to you. It is the UI from Chrome's JavaScript debugger.\n\nThe features enabled for HHVM debugging include:\n\n### Call Stack & Variable Display\n\nClick on a stack frame to show the variables in scope at that frame:\n\n![Stack](./images/Stack.png)\n\nClick on a scope or variable to examine values.\n\n### Execution Control\n\nContinue, Step Over/Into/Out are controlled by these buttons:\n\n![Execution Control](./images/ExecControl.png)\n\n### BreakPoints  \n\nSet breakpoints by clicking on the line number in the left side of your source window.\nA line with a breakpoint will show a small red circle next to the line number.\n\n![Breakpoint](./images/Breakpoint.png)\n\n### Ending a Debug Session\n\nWhen the script being debugged has terminated the following message appears:\n\n![End](./images/DebugEnd.png)\n\nClick the red X at the top right of the Debug UI to terminate your debug session:\n\n![Close](./images/Close.png)\n\nRestart the attach process to debug the script again.\n\n### Coming Soon\n\n- Display of class static variables\n- Expression Evaluation\n- Enhanced breakpoints\n  - break on exception\n  - conditional break points\n\n## Filtering Debuggee Connections\n\nBy default, the debugger will attach to the first HHVM script which is run after beginning the\nattach process. On a busy server, you may find that you accidentally attach to a monitoring\nscript before you can attach to your intended debuggee script.\n\nYou can control the script you attach to in the config settings of the debugger-hhvm package.\n\n- Open the Settings page with `Cmd - ,`\n- Select the `debugger-hhvm` package\n\n![Config](./images/Config.png)\n\nEnter the name of the script you want to debug in the `Script Regex` field. This field accepts\nany JavaScript regular expression. Clever regular expressions can be used to exclude scripts in\nselected subdirectories.\n\nSimilarly the `Idekey Regex` can be used to filter debuggee connections by `idekey`. By\ndefault HHVM sets the `idekey` to the unix username which started HHVM. The `idekey` used by HHVM can\nbe overriden by setting `xdebug.idekey` in the `config.ini` file specified when running HHVM.\nNote that on many servers HHVM will be run by `root` so filtering by `idekey` may be unhelpful.\n\nBy default HHVM connects to debuggers on port 9000. This can be overriden with `xdebug.remote_port`\nin your `config.ini`.\n\nNote that `xdebug.idekey` and `xdebug.remote_port` may only be set in an `ini` file. They are\nnot configurable from the `hdl` config file format.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/facebooknuclideapm/nuclide-debugger-hhvm/issues"},"homepage":"https://github.com/facebooknuclideapm/nuclide-debugger-hhvm#readme","_id":"nuclide-debugger-hhvm@0.0.35","_shasum":"96ad2e26b5d7a1254fe9cab86bad6975a9403b4b","_resolved":"file:../d-1151116-9991-u1yn8z/package.tgz","_from":"../d-1151116-9991-u1yn8z/package.tgz"}