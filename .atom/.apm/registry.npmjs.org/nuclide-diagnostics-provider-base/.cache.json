{"_id":"nuclide-diagnostics-provider-base","_rev":"5-780addb956a134f866ae7772ab27cd16","name":"nuclide-diagnostics-provider-base","description":"Utilities to make implementing a diagnostics provider easier","dist-tags":{"latest":"0.0.35"},"versions":{"0.0.0":{"dependencies":{"nuclide-text-event-dispatcher":"0.0.0"},"description":"Utilities to make implementing a diagnostics provider easier","devDependencies":{"nuclide-diagnostics-base":"0.0.0","nuclide-external-interfaces":"0.0.0"},"main":"./lib/main","name":"nuclide-diagnostics-provider-base","nuclide":{"packageType":"Node","testRunner":"apm"},"repository":{"type":"git","url":"git+https://github.com/facebook/nuclide.git"},"version":"0.0.0","bugs":{"url":"https://github.com/facebook/nuclide/issues"},"homepage":"https://github.com/facebook/nuclide#readme","_id":"nuclide-diagnostics-provider-base@0.0.0","scripts":{},"_shasum":"8139092ef59cc6caff648b0d2a292d60522d0474","_from":".","_npmVersion":"2.11.2","_nodeVersion":"0.12.5","_npmUser":{"name":"fb","email":"opensource+npm@fb.com"},"dist":{"shasum":"8139092ef59cc6caff648b0d2a292d60522d0474","tarball":"http://registry.npmjs.org/nuclide-diagnostics-provider-base/-/nuclide-diagnostics-provider-base-0.0.0.tgz"},"maintainers":[{"name":"fb","email":"opensource+npm@fb.com"}],"directories":{}},"0.0.31":{"dependencies":{"nuclide-text-event-dispatcher":"0.0.31"},"description":"Utilities to make implementing a diagnostics provider easier","devDependencies":{"nuclide-diagnostics-base":"0.0.31","nuclide-external-interfaces":"0.0.31"},"license":"SEE LICENSE IN LICENSE","main":"./lib/main","name":"nuclide-diagnostics-provider-base","nuclide":{"packageType":"Node","testRunner":"apm"},"repository":{"type":"git","url":"https://github.com/facebook/nuclide"},"version":"0.0.31","bugs":{"url":"https://github.com/facebook/nuclide/issues"},"homepage":"https://github.com/facebook/nuclide","_id":"nuclide-diagnostics-provider-base@0.0.31","scripts":{},"_shasum":"f0dddb0bb9f78c520621c649eb1851fd97919a88","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.12.0","_npmUser":{"name":"fb","email":"opensource+npm@fb.com"},"dist":{"shasum":"f0dddb0bb9f78c520621c649eb1851fd97919a88","tarball":"http://registry.npmjs.org/nuclide-diagnostics-provider-base/-/nuclide-diagnostics-provider-base-0.0.31.tgz"},"maintainers":[{"name":"fb","email":"opensource+npm@fb.com"}],"directories":{}},"0.0.32":{"dependencies":{"nuclide-text-event-dispatcher":"0.0.32"},"description":"Utilities to make implementing a diagnostics provider easier","devDependencies":{"nuclide-diagnostics-base":"0.0.32","nuclide-external-interfaces":"0.0.32"},"license":"SEE LICENSE IN LICENSE","main":"./lib/main","name":"nuclide-diagnostics-provider-base","nuclide":{"packageType":"Node","testRunner":"apm"},"repository":{"type":"git","url":"https://github.com/facebook/nuclide"},"version":"0.0.32","bugs":{"url":"https://github.com/facebook/nuclide/issues"},"homepage":"https://github.com/facebook/nuclide","_id":"nuclide-diagnostics-provider-base@0.0.32","scripts":{},"_shasum":"391f82aa8801f25937f4912a62984fb7c72ce129","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.12.0","_npmUser":{"name":"fb","email":"opensource+npm@fb.com"},"dist":{"shasum":"391f82aa8801f25937f4912a62984fb7c72ce129","tarball":"http://registry.npmjs.org/nuclide-diagnostics-provider-base/-/nuclide-diagnostics-provider-base-0.0.32.tgz"},"maintainers":[{"name":"fb","email":"opensource+npm@fb.com"}],"directories":{}},"0.0.34":{"dependencies":{"nuclide-text-event-dispatcher":"0.0.34"},"description":"Utilities to make implementing a diagnostics provider easier","devDependencies":{"nuclide-diagnostics-base":"0.0.34","nuclide-external-interfaces":"0.0.34"},"license":"SEE LICENSE IN LICENSE","main":"./lib/main","name":"nuclide-diagnostics-provider-base","nuclide":{"flowCheck":true,"packageType":"Node","testRunner":"apm"},"repository":{"type":"git","url":"git+https://github.com/facebook/nuclide.git"},"version":"0.0.34","bugs":{"url":"https://github.com/facebook/nuclide/issues"},"homepage":"https://github.com/facebook/nuclide#readme","_id":"nuclide-diagnostics-provider-base@0.0.34","scripts":{},"_shasum":"747bac4a69dba8d5d3e63634a7906818d79c6b63","_from":".","_npmVersion":"2.12.1","_nodeVersion":"0.12.7","_npmUser":{"name":"fb","email":"opensource+npm@fb.com"},"dist":{"shasum":"747bac4a69dba8d5d3e63634a7906818d79c6b63","tarball":"http://registry.npmjs.org/nuclide-diagnostics-provider-base/-/nuclide-diagnostics-provider-base-0.0.34.tgz"},"maintainers":[{"name":"fb","email":"opensource+npm@fb.com"}],"directories":{}},"0.0.35":{"dependencies":{"nuclide-text-event-dispatcher":"0.0.35"},"description":"Utilities to make implementing a diagnostics provider easier","devDependencies":{"nuclide-diagnostics-base":"0.0.35"},"license":"SEE LICENSE IN LICENSE","main":"./lib/main","name":"nuclide-diagnostics-provider-base","nuclide":{"packageType":"Node","testRunner":"apm"},"repository":{"type":"git","url":"git+https://github.com/facebook/nuclide.git"},"version":"0.0.35","bugs":{"url":"https://github.com/facebook/nuclide/issues"},"homepage":"https://github.com/facebook/nuclide#readme","_id":"nuclide-diagnostics-provider-base@0.0.35","scripts":{},"_shasum":"80eb37a3b506d9e6568e1141ce749bccd4f65e22","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.2","_npmUser":{"name":"fb","email":"opensource+npm@fb.com"},"dist":{"shasum":"80eb37a3b506d9e6568e1141ce749bccd4f65e22","tarball":"http://registry.npmjs.org/nuclide-diagnostics-provider-base/-/nuclide-diagnostics-provider-base-0.0.35.tgz"},"maintainers":[{"name":"fb","email":"opensource+npm@fb.com"}],"directories":{}}},"readme":"# nuclide-diagnostics-provider-base\n\nThis package is for developers wishing to integrate with the `nuclide-diagnostics` packages. If you\nsimply want to view diagnostics in Atom, look at the [end-user\ndocs](https://github.com/facebook/nuclide/tree/master/pkg/nuclide/diagnostics#readme).\n\nThis package solves some common problems for diagnostics providers. It manages consumer\nsubscriptions and also subscribes to the appropriate text editor events, such as file save.\n\nTake a look at our [sample diagnostics\nprovider](https://github.com/facebook/nuclide/tree/master/pkg/sample/diagnostics-provider) to see\nthis in action.\n\nThe `DiagnosticsProviderBase` constructor takes a single argument: A `ProviderBaseOptions` object.\n\n```js\ntype ProviderBaseOptions = {\n  /** The callback by which a provider is notified of text events, such as a file save. */\n  onTextEditorEvent?: (editor: TextEditor) => mixed;\n  /**\n   * The callback by which a provider is notified that a new consumer has subscribed to diagnostic\n   * updates.\n   */\n  onNewUpdateSubscriber?: (callback: MessageUpdateCallback) => mixed;\n  /**\n   * The callback by which a provider is notified that a new consumer has subscribed to diagnostic\n   * invalidations.\n   */\n  onNewInvalidateSubscriber?: (callback: MessageInvalidationCallback) => mixed;\n  /**\n   * If true, this will cause onTextEditorEvent to get called more often -- approximately whenever\n   * the user stops typing. If false, it will get called only when the user saves.\n   */\n  shouldRunOnTheFly?: boolean;\n  /**\n   * The following two options specify which grammars the provider is interested in. Most providers\n   * will include a set of grammarScopes, and will therefore get notifications only about\n   * TextEditors that are associated with those grammarScopes. Instead, a provider may set\n   * enableForAllGrammars to true, and then it will get notified of changes in all TextEditors. If\n   * enableForAllGrammars is true, it overrides the grammars in grammarScopes.\n   */\n  grammarScopes?: Set<string>;\n  enableForAllGrammars?: boolean;\n}\n```\n\nA provider should delegate to a `DiagnosticsProviderBase` object once it is constructed.\n\nA provider should call `providerBase.publishMessageUpdate(update)` and\n`providerBase.publishMessageInvalidation(invalidation)` when they wish to publish messages. In most\ncases, these should be called, directly or indirectly, from the callback passed as\n`onTextEditorEvent` in the options.\n\nA provider may call `providerBase.setRunOnTheFly(runOnFly)` to alter this setting after it has been\nconstructed. This is useful if you would like to provide a setting to allow users to change this at\nwill.\n\nA provider should delegate to `providerBase.onMessageUpdate(callback)` and\n`providerBase.onMessageInvalidation(callback)` to allow the provider base to manage event\nsubscriptions.\n","maintainers":[{"name":"fb","email":"opensource+npm@fb.com"}],"time":{"modified":"2015-11-25T18:41:11.109Z","created":"2015-08-28T06:32:24.656Z","0.0.0":"2015-08-28T06:32:24.656Z","0.0.31":"2015-09-15T00:27:12.036Z","0.0.32":"2015-09-15T17:23:55.725Z","0.0.34":"2015-11-12T01:14:16.021Z","0.0.35":"2015-11-25T18:41:11.109Z"},"homepage":"https://github.com/facebook/nuclide#readme","repository":{"type":"git","url":"git+https://github.com/facebook/nuclide.git"},"bugs":{"url":"https://github.com/facebook/nuclide/issues"},"readmeFilename":"README.md","license":"SEE LICENSE IN LICENSE","_attachments":{},"_etag":"\"DLSTE0DCAGTCB5JI1N6VEJBQN\""}