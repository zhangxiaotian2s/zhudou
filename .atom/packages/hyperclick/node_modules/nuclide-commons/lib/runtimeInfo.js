Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.getRuntimeInformation = getRuntimeInformation;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var _object = require('./object');

var _clientInfo = require('./clientInfo');

var _systemInfo = require('./systemInfo');

var _environment = require('./environment');

var _environment2 = _interopRequireDefault(_environment);

var _session = require('./session');

var _session2 = _interopRequireDefault(_session);

'use babel';

var cachedInformation = null;

function getCacheableRuntimeInformation() {
  if (cachedInformation !== null) {
    return cachedInformation;
  }

  cachedInformation = {
    sessionId: '',
    user: _environment2['default'].USER,
    osType: (0, _systemInfo.getOsType)(),
    timestamp: 0,
    isClient: (0, _clientInfo.isRunningInClient)(),
    atomVersion: (0, _clientInfo.isRunningInClient)() ? (0, _clientInfo.getAtomVersion)() : '',
    isRunningInNuclide: (0, _clientInfo.isRunningInNuclide)(),
    nuclideVersion: (0, _clientInfo.isRunningInNuclide)() ? (0, _clientInfo.getNuclideBuildNumber)() : 0,
    installerPackageVersion: 0,
    uptime: 0,
    // TODO (chenshen) fill following information.
    serverVersion: 0,
    isDevelopment: false
  };

  return cachedInformation;
}

function getRuntimeInformation() {
  var runtimeInformation = (0, _object.assign)({}, getCacheableRuntimeInformation());
  runtimeInformation.sessionId = _session2['default'].id;
  runtimeInformation.timestamp = Date.now();
  runtimeInformation.installerPackageVersion = (0, _clientInfo.getInstallerPackageBuildNumber)();
  runtimeInformation.uptime = Math.floor(process.uptime() * 1000);
  return runtimeInformation;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBwZmw1Mm5wdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLWNvbW1vbnMvbGliL3J1bnRpbWVJbmZvLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztzQkFXcUIsVUFBVTs7MEJBT3hCLGNBQWM7OzBCQUNHLGNBQWM7OzJCQUNkLGVBQWU7Ozs7dUJBQ25CLFdBQVc7Ozs7QUFyQi9CLFdBQVcsQ0FBQzs7QUFzQ1osSUFBSSxpQkFBaUIsR0FBRyxJQUFJLENBQUM7O0FBRTdCLFNBQVMsOEJBQThCLEdBQXVCO0FBQzVELE1BQUksaUJBQWlCLEtBQUssSUFBSSxFQUFFO0FBQzlCLFdBQU8saUJBQWlCLENBQUM7R0FDMUI7O0FBRUQsbUJBQWlCLEdBQUc7QUFDbEIsYUFBUyxFQUFFLEVBQUU7QUFDYixRQUFJLEVBQUUseUJBQVksSUFBSTtBQUN0QixVQUFNLEVBQUUsZ0JBN0JKLFNBQVMsR0E2Qk07QUFDbkIsYUFBUyxFQUFFLENBQUM7QUFDWixZQUFRLEVBQUUsZ0JBbENaLGlCQUFpQixHQWtDYztBQUM3QixlQUFXLEVBQUUsZ0JBbkNmLGlCQUFpQixHQW1DaUIsR0FBRyxnQkF0Q3JDLGNBQWMsR0FzQ3VDLEdBQUcsRUFBRTtBQUN4RCxzQkFBa0IsRUFBRSxnQkFuQ3RCLGtCQUFrQixHQW1Dd0I7QUFDeEMsa0JBQWMsRUFBRSxnQkFwQ2xCLGtCQUFrQixHQW9Db0IsR0FBRyxnQkF0Q3pDLHFCQUFxQixHQXNDMkMsR0FBRyxDQUFDO0FBQ2xFLDJCQUF1QixFQUFFLENBQUM7QUFDMUIsVUFBTSxFQUFFLENBQUM7O0FBRVQsaUJBQWEsRUFBRSxDQUFDO0FBQ2hCLGlCQUFhLEVBQUUsS0FBSztHQUNyQixDQUFDOztBQUVGLFNBQU8saUJBQWlCLENBQUM7Q0FDMUI7O0FBRU0sU0FBUyxxQkFBcUIsR0FBdUI7QUFDMUQsTUFBTSxrQkFBa0IsR0FBRyxZQXREckIsTUFBTSxFQXNEc0IsRUFBRSxFQUFFLDhCQUE4QixFQUFFLENBQUMsQ0FBQztBQUN4RSxvQkFBa0IsQ0FBQyxTQUFTLEdBQUcscUJBQVEsRUFBRSxDQUFDO0FBQzFDLG9CQUFrQixDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDMUMsb0JBQWtCLENBQUMsdUJBQXVCLEdBQUcsZ0JBdEQ3Qyw4QkFBOEIsR0FzRCtDLENBQUM7QUFDOUUsb0JBQWtCLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDO0FBQ2hFLFNBQU8sa0JBQWtCLENBQUM7Q0FDM0IiLCJmaWxlIjoiL3Zhci9mb2xkZXJzL3hmL3JzcGg0X2M1NzMxNXJzNTd4eHNkc2tyeG52MzZ0MC9UL3RtcHBmbDUybnB1Ymxpc2hfcGFja2FnZXMvbnBtL251Y2xpZGUtY29tbW9ucy9saWIvcnVudGltZUluZm8uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcbi8qIEBmbG93ICovXG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGluXG4gKiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQge2Fzc2lnbn0gZnJvbSAnLi9vYmplY3QnO1xuaW1wb3J0IHtcbiAgZ2V0QXRvbVZlcnNpb24sXG4gIGdldEluc3RhbGxlclBhY2thZ2VCdWlsZE51bWJlcixcbiAgZ2V0TnVjbGlkZUJ1aWxkTnVtYmVyLFxuICBpc1J1bm5pbmdJbkNsaWVudCxcbiAgaXNSdW5uaW5nSW5OdWNsaWRlLFxufSBmcm9tICcuL2NsaWVudEluZm8nO1xuaW1wb3J0IHtnZXRPc1R5cGV9IGZyb20gJy4vc3lzdGVtSW5mbyc7XG5pbXBvcnQgZW52aXJvbm1lbnQgZnJvbSAnLi9lbnZpcm9ubWVudCc7XG5pbXBvcnQgc2Vzc2lvbiBmcm9tICcuL3Nlc3Npb24nO1xuXG5leHBvcnQgdHlwZSBSdW50aW1lSW5mb3JtYXRpb24gPSB7XG4gIHNlc3Npb25JZDogc3RyaW5nO1xuICB1c2VyOiBzdHJpbmc7XG4gIG9zVHlwZTogc3RyaW5nO1xuICB0aW1lc3RhbXA6IG51bWJlcjtcbiAgaXNDbGllbnQ6IGJvb2xlYW47XG4gIGlzRGV2ZWxvcG1lbnQ6IGJvb2xlYW47XG4gIGlzUnVubmluZ0luTnVjbGlkZTogYm9vbGVhbjtcbiAgYXRvbVZlcnNpb246IHN0cmluZztcbiAgbnVjbGlkZVZlcnNpb246IG51bWJlcjtcbiAgaW5zdGFsbGVyUGFja2FnZVZlcnNpb246IG51bWJlcjtcbiAgc2VydmVyVmVyc2lvbjogbnVtYmVyO1xuICB1cHRpbWU6IG51bWJlcjtcbn07XG5cbmxldCBjYWNoZWRJbmZvcm1hdGlvbiA9IG51bGw7XG5cbmZ1bmN0aW9uIGdldENhY2hlYWJsZVJ1bnRpbWVJbmZvcm1hdGlvbigpOiBSdW50aW1lSW5mb3JtYXRpb24ge1xuICBpZiAoY2FjaGVkSW5mb3JtYXRpb24gIT09IG51bGwpIHtcbiAgICByZXR1cm4gY2FjaGVkSW5mb3JtYXRpb247XG4gIH1cblxuICBjYWNoZWRJbmZvcm1hdGlvbiA9IHtcbiAgICBzZXNzaW9uSWQ6ICcnLFxuICAgIHVzZXI6IGVudmlyb25tZW50LlVTRVIsXG4gICAgb3NUeXBlOiBnZXRPc1R5cGUoKSxcbiAgICB0aW1lc3RhbXA6IDAsXG4gICAgaXNDbGllbnQ6IGlzUnVubmluZ0luQ2xpZW50KCksXG4gICAgYXRvbVZlcnNpb246IGlzUnVubmluZ0luQ2xpZW50KCkgPyBnZXRBdG9tVmVyc2lvbigpIDogJycsXG4gICAgaXNSdW5uaW5nSW5OdWNsaWRlOiBpc1J1bm5pbmdJbk51Y2xpZGUoKSxcbiAgICBudWNsaWRlVmVyc2lvbjogaXNSdW5uaW5nSW5OdWNsaWRlKCkgPyBnZXROdWNsaWRlQnVpbGROdW1iZXIoKSA6IDAgLFxuICAgIGluc3RhbGxlclBhY2thZ2VWZXJzaW9uOiAwLFxuICAgIHVwdGltZTogMCxcbiAgICAvLyBUT0RPIChjaGVuc2hlbikgZmlsbCBmb2xsb3dpbmcgaW5mb3JtYXRpb24uXG4gICAgc2VydmVyVmVyc2lvbjogMCxcbiAgICBpc0RldmVsb3BtZW50OiBmYWxzZSxcbiAgfTtcblxuICByZXR1cm4gY2FjaGVkSW5mb3JtYXRpb247XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRSdW50aW1lSW5mb3JtYXRpb24oKTogUnVudGltZUluZm9ybWF0aW9uIHtcbiAgY29uc3QgcnVudGltZUluZm9ybWF0aW9uID0gYXNzaWduKHt9LCBnZXRDYWNoZWFibGVSdW50aW1lSW5mb3JtYXRpb24oKSk7XG4gIHJ1bnRpbWVJbmZvcm1hdGlvbi5zZXNzaW9uSWQgPSBzZXNzaW9uLmlkO1xuICBydW50aW1lSW5mb3JtYXRpb24udGltZXN0YW1wID0gRGF0ZS5ub3coKTtcbiAgcnVudGltZUluZm9ybWF0aW9uLmluc3RhbGxlclBhY2thZ2VWZXJzaW9uID0gZ2V0SW5zdGFsbGVyUGFja2FnZUJ1aWxkTnVtYmVyKCk7XG4gIHJ1bnRpbWVJbmZvcm1hdGlvbi51cHRpbWUgPSBNYXRoLmZsb29yKHByb2Nlc3MudXB0aW1lKCkgKiAxMDAwKTtcbiAgcmV0dXJuIHJ1bnRpbWVJbmZvcm1hdGlvbjtcbn1cbiJdfQ==
