
/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

// A Queue which will process elements at intervals, only if the
// queue contains any elements.

var BatchProcessedQueue = (function () {
  function BatchProcessedQueue(batchPeriod, handler) {
    _classCallCheck(this, BatchProcessedQueue);

    this._batchPeriod = batchPeriod;
    this._handler = handler;
    this._timeoutId = null;
    this._items = [];
  }

  _createClass(BatchProcessedQueue, [{
    key: 'add',
    value: function add(item) {
      var _this = this;

      this._items.push(item);
      if (this._timeoutId === null) {
        this._timeoutId = setTimeout(function () {
          _this._handleBatch();
        }, this._batchPeriod);
      }
    }
  }, {
    key: '_handleBatch',
    value: function _handleBatch() {
      this._timeoutId = null;
      var batch = this._items;
      this._items = [];
      this._handler(batch);
    }
  }, {
    key: 'dispose',
    value: function dispose() {
      if (this._timeoutId !== null) {
        clearTimeout(this._timeoutId);
        this._handleBatch();
      }
    }
  }]);

  return BatchProcessedQueue;
})();

exports.BatchProcessedQueue = BatchProcessedQueue;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBwZmw1Mm5wdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLWNvbW1vbnMvbGliL0JhdGNoUHJvY2Vzc2VkUXVldWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFlQyxtQkFBbUI7QUFNbkIsV0FOQSxtQkFBbUIsQ0FNbEIsV0FBbUIsRUFBRSxPQUF3QixFQUFFOzBCQU5oRCxtQkFBbUI7O0FBTzVCLFFBQUksQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFDO0FBQ2hDLFFBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO0FBQ3hCLFFBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO0FBQ3ZCLFFBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO0dBQ2xCOztlQVhVLG1CQUFtQjs7V0FhM0IsYUFBQyxJQUFPLEVBQVE7OztBQUNqQixVQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN2QixVQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssSUFBSSxFQUFFO0FBQzVCLFlBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDLFlBQU07QUFDakMsZ0JBQUssWUFBWSxFQUFFLENBQUM7U0FDckIsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7T0FDdkI7S0FDRjs7O1dBRVcsd0JBQUc7QUFDYixVQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztBQUN2QixVQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0FBQzFCLFVBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO0FBQ2pCLFVBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDdEI7OztXQUVNLG1CQUFTO0FBQ2QsVUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLElBQUksRUFBRTtBQUM1QixvQkFBWSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUM5QixZQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7T0FDckI7S0FDRjs7O1NBbENVLG1CQUFtQiIsImZpbGUiOiIvdmFyL2ZvbGRlcnMveGYvcnNwaDRfYzU3MzE1cnM1N3h4c2Rza3J4bnYzNnQwL1QvdG1wcGZsNTJucHVibGlzaF9wYWNrYWdlcy9ucG0vbnVjbGlkZS1jb21tb25zL2xpYi9CYXRjaFByb2Nlc3NlZFF1ZXVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBiYWJlbCc7XG4vKiBAZmxvdyAqL1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIGxpY2Vuc2UgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBpblxuICogdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuZXhwb3J0IHR5cGUgQmF0Y2hIYW5kbGVyPFQ+ID0gKGJhdGNoOiBBcnJheTxUPikgPT4gdm9pZDtcblxuLy8gQSBRdWV1ZSB3aGljaCB3aWxsIHByb2Nlc3MgZWxlbWVudHMgYXQgaW50ZXJ2YWxzLCBvbmx5IGlmIHRoZVxuLy8gcXVldWUgY29udGFpbnMgYW55IGVsZW1lbnRzLlxuZXhwb3J0IGNsYXNzIEJhdGNoUHJvY2Vzc2VkUXVldWU8VD4ge1xuICBfYmF0Y2hQZXJpb2Q6IG51bWJlcjtcbiAgX2hhbmRsZXI6IEJhdGNoSGFuZGxlcjxUPjtcbiAgX3RpbWVvdXRJZDogP251bWJlcjtcbiAgX2l0ZW1zOiBBcnJheTxUPjtcblxuICBjb25zdHJ1Y3RvcihiYXRjaFBlcmlvZDogbnVtYmVyLCBoYW5kbGVyOiBCYXRjaEhhbmRsZXI8VD4pIHtcbiAgICB0aGlzLl9iYXRjaFBlcmlvZCA9IGJhdGNoUGVyaW9kO1xuICAgIHRoaXMuX2hhbmRsZXIgPSBoYW5kbGVyO1xuICAgIHRoaXMuX3RpbWVvdXRJZCA9IG51bGw7XG4gICAgdGhpcy5faXRlbXMgPSBbXTtcbiAgfVxuXG4gIGFkZChpdGVtOiBUKTogdm9pZCB7XG4gICAgdGhpcy5faXRlbXMucHVzaChpdGVtKTtcbiAgICBpZiAodGhpcy5fdGltZW91dElkID09PSBudWxsKSB7XG4gICAgICB0aGlzLl90aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5faGFuZGxlQmF0Y2goKTtcbiAgICAgIH0sIHRoaXMuX2JhdGNoUGVyaW9kKTtcbiAgICB9XG4gIH1cblxuICBfaGFuZGxlQmF0Y2goKSB7XG4gICAgdGhpcy5fdGltZW91dElkID0gbnVsbDtcbiAgICBjb25zdCBiYXRjaCA9IHRoaXMuX2l0ZW1zO1xuICAgIHRoaXMuX2l0ZW1zID0gW107XG4gICAgdGhpcy5faGFuZGxlcihiYXRjaCk7XG4gIH1cblxuICBkaXNwb3NlKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLl90aW1lb3V0SWQgIT09IG51bGwpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0SWQpO1xuICAgICAgdGhpcy5faGFuZGxlQmF0Y2goKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==
