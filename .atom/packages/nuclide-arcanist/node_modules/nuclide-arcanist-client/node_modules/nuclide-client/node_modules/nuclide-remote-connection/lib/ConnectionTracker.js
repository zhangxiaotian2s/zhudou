Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var _nuclideCommons = require('nuclide-commons');

var _nuclideAnalytics = require('nuclide-analytics');

'use babel';

var CONNECTION_EVENT = 'nuclide-remote-connection';

var ConnectionTracker = (function () {
  function ConnectionTracker(config) {
    _classCallCheck(this, ConnectionTracker);

    this._config = config;
    this._expired = false;
    this._connectionStartTime = Date.now();
    this._promptYubikeyTime = 0;
    this._finishYubikeyTime = 0;
  }

  _createClass(ConnectionTracker, [{
    key: 'trackPromptYubikeyInput',
    value: function trackPromptYubikeyInput() {
      this._promptYubikeyTime = Date.now();
    }
  }, {
    key: 'trackFinishYubikeyInput',
    value: function trackFinishYubikeyInput() {
      this._finishYubikeyTime = Date.now();
    }
  }, {
    key: 'trackSuccess',
    value: function trackSuccess() {
      this._trackConnectionResult(true);
    }
  }, {
    key: 'trackFailure',
    value: function trackFailure(e) {
      this._trackConnectionResult(false, e);
    }
  }, {
    key: '_trackConnectionResult',
    value: function _trackConnectionResult(succeed, e) {
      if (this._expired) {
        return;
      }

      var preYubikeyDuration = this._promptYubikeyTime > 0 ? this._promptYubikeyTime - this._connectionStartTime : 0;
      var postYubikeyDuration = this._finishYubikeyTime > 0 ? Date.now() - this._finishYubikeyTime : 0;
      var realDuration = preYubikeyDuration > 0 && postYubikeyDuration > 0 ? preYubikeyDuration + postYubikeyDuration : 0;

      (0, _nuclideAnalytics.track)(CONNECTION_EVENT, {
        error: succeed ? '0' : '1',
        exception: e ? _nuclideCommons.error.stringifyError(e) : '',
        duration: (Date.now() - this._connectionStartTime).toString(),
        preYubikeyDuration: preYubikeyDuration.toString(),
        postYubikeyDuration: postYubikeyDuration.toString(),
        realDuration: realDuration.toString(),
        host: this._config.host,
        sshPort: this._config.sshPort.toString(),
        username: this._config.username,
        remoteServerCommand: this._config.remoteServerCommand,
        cwd: this._config.cwd,
        authMethod: this._config.authMethod
      });

      this._expired = true;
    }
  }]);

  return ConnectionTracker;
})();

exports['default'] = ConnectionTracker;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBwZmw1Mm5wdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLXJlbW90ZS1jb25uZWN0aW9uL2xpYi9Db25uZWN0aW9uVHJhY2tlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OzhCQVdvQixpQkFBaUI7O2dDQUNqQixtQkFBbUI7O0FBWnZDLFdBQVcsQ0FBQzs7QUFnQlosSUFBTSxnQkFBZ0IsR0FBRywyQkFBMkIsQ0FBQzs7SUFFaEMsaUJBQWlCO0FBUXpCLFdBUlEsaUJBQWlCLENBUXhCLE1BQWtDLEVBQUU7MEJBUjdCLGlCQUFpQjs7QUFTbEMsUUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7QUFDdEIsUUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7QUFDdEIsUUFBSSxDQUFDLG9CQUFvQixHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUN2QyxRQUFJLENBQUMsa0JBQWtCLEdBQUcsQ0FBQyxDQUFDO0FBQzVCLFFBQUksQ0FBQyxrQkFBa0IsR0FBRyxDQUFDLENBQUM7R0FDN0I7O2VBZGtCLGlCQUFpQjs7V0FnQmIsbUNBQVM7QUFDOUIsVUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUN0Qzs7O1dBRXNCLG1DQUFTO0FBQzlCLFVBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7S0FDdEM7OztXQUVXLHdCQUFTO0FBQ25CLFVBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNuQzs7O1dBRVcsc0JBQUMsQ0FBUSxFQUFRO0FBQzNCLFVBQUksQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDdkM7OztXQUVxQixnQ0FBQyxPQUFnQixFQUFFLENBQVMsRUFBUTtBQUN4RCxVQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7QUFDakIsZUFBTztPQUNSOztBQUVELFVBQU0sa0JBQWtCLEdBQ3RCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxDQUFDLEdBQUksSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxvQkFBb0IsR0FBSSxDQUFDLENBQUM7QUFDMUYsVUFBTSxtQkFBbUIsR0FDdkIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLENBQUMsR0FBSSxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixHQUFJLENBQUMsQ0FBQztBQUMzRSxVQUFNLFlBQVksR0FBRyxBQUFDLGtCQUFrQixHQUFHLENBQUMsSUFBSSxtQkFBbUIsR0FBRyxDQUFDLEdBQ3BFLGtCQUFrQixHQUFHLG1CQUFtQixHQUFJLENBQUMsQ0FBQzs7QUFFakQsNEJBbERJLEtBQUssRUFtRFAsZ0JBQWdCLEVBQ2hCO0FBQ0UsYUFBSyxFQUFFLE9BQU8sR0FBRyxHQUFHLEdBQUcsR0FBRztBQUMxQixpQkFBUyxFQUFFLENBQUMsR0FBRyxnQkF2RGYsS0FBSyxDQXVEZ0IsY0FBYyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7QUFDM0MsZ0JBQVEsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUEsQ0FBRSxRQUFRLEVBQUU7QUFDN0QsMEJBQWtCLEVBQUUsa0JBQWtCLENBQUMsUUFBUSxFQUFFO0FBQ2pELDJCQUFtQixFQUFFLG1CQUFtQixDQUFDLFFBQVEsRUFBRTtBQUNuRCxvQkFBWSxFQUFFLFlBQVksQ0FBQyxRQUFRLEVBQUU7QUFDckMsWUFBSSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSTtBQUN2QixlQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFO0FBQ3hDLGdCQUFRLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRO0FBQy9CLDJCQUFtQixFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsbUJBQW1CO0FBQ3JELFdBQUcsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUc7QUFDckIsa0JBQVUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVU7T0FDcEMsQ0FDRixDQUFDOztBQUVGLFVBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0tBQ3RCOzs7U0EvRGtCLGlCQUFpQjs7O3FCQUFqQixpQkFBaUIiLCJmaWxlIjoiL3Zhci9mb2xkZXJzL3hmL3JzcGg0X2M1NzMxNXJzNTd4eHNkc2tyeG52MzZ0MC9UL3RtcHBmbDUybnB1Ymxpc2hfcGFja2FnZXMvbnBtL251Y2xpZGUtcmVtb3RlLWNvbm5lY3Rpb24vbGliL0Nvbm5lY3Rpb25UcmFja2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBiYWJlbCc7XG4vKiBAZmxvdyAqL1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIGxpY2Vuc2UgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBpblxuICogdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IHtlcnJvcn0gZnJvbSAnbnVjbGlkZS1jb21tb25zJztcbmltcG9ydCB7dHJhY2t9IGZyb20gJ251Y2xpZGUtYW5hbHl0aWNzJztcblxuaW1wb3J0IHR5cGUge1NzaENvbm5lY3Rpb25Db25maWd1cmF0aW9ufSBmcm9tICcuL1NzaEhhbmRzaGFrZSc7XG5cbmNvbnN0IENPTk5FQ1RJT05fRVZFTlQgPSAnbnVjbGlkZS1yZW1vdGUtY29ubmVjdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbm5lY3Rpb25UcmFja2VyIHtcblxuICBfY29uZmlnOiBTc2hDb25uZWN0aW9uQ29uZmlndXJhdGlvbjtcbiAgX2Nvbm5lY3Rpb25TdGFydFRpbWU6IG51bWJlcjtcbiAgX3Byb21wdFl1YmlrZXlUaW1lOiBudW1iZXI7XG4gIF9maW5pc2hZdWJpa2V5VGltZTogbnVtYmVyO1xuICBfZXhwaXJlZDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3Rvcihjb25maWc6IFNzaENvbm5lY3Rpb25Db25maWd1cmF0aW9uKSB7XG4gICAgdGhpcy5fY29uZmlnID0gY29uZmlnO1xuICAgIHRoaXMuX2V4cGlyZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9jb25uZWN0aW9uU3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICB0aGlzLl9wcm9tcHRZdWJpa2V5VGltZSA9IDA7XG4gICAgdGhpcy5fZmluaXNoWXViaWtleVRpbWUgPSAwO1xuICB9XG5cbiAgdHJhY2tQcm9tcHRZdWJpa2V5SW5wdXQoKTogdm9pZCB7XG4gICAgdGhpcy5fcHJvbXB0WXViaWtleVRpbWUgPSBEYXRlLm5vdygpO1xuICB9XG5cbiAgdHJhY2tGaW5pc2hZdWJpa2V5SW5wdXQoKTogdm9pZCB7XG4gICAgdGhpcy5fZmluaXNoWXViaWtleVRpbWUgPSBEYXRlLm5vdygpO1xuICB9XG5cbiAgdHJhY2tTdWNjZXNzKCk6IHZvaWQge1xuICAgIHRoaXMuX3RyYWNrQ29ubmVjdGlvblJlc3VsdCh0cnVlKTtcbiAgfVxuXG4gIHRyYWNrRmFpbHVyZShlOiBFcnJvcik6IHZvaWQge1xuICAgIHRoaXMuX3RyYWNrQ29ubmVjdGlvblJlc3VsdChmYWxzZSwgZSk7XG4gIH1cblxuICBfdHJhY2tDb25uZWN0aW9uUmVzdWx0KHN1Y2NlZWQ6IGJvb2xlYW4sIGU6ID9FcnJvcik6IHZvaWQge1xuICAgIGlmICh0aGlzLl9leHBpcmVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgcHJlWXViaWtleUR1cmF0aW9uID1cbiAgICAgIHRoaXMuX3Byb21wdFl1YmlrZXlUaW1lID4gMCA/ICh0aGlzLl9wcm9tcHRZdWJpa2V5VGltZSAtIHRoaXMuX2Nvbm5lY3Rpb25TdGFydFRpbWUpIDogMDtcbiAgICBjb25zdCBwb3N0WXViaWtleUR1cmF0aW9uID1cbiAgICAgIHRoaXMuX2ZpbmlzaFl1YmlrZXlUaW1lID4gMCA/IChEYXRlLm5vdygpIC0gdGhpcy5fZmluaXNoWXViaWtleVRpbWUpIDogMDtcbiAgICBjb25zdCByZWFsRHVyYXRpb24gPSAocHJlWXViaWtleUR1cmF0aW9uID4gMCAmJiBwb3N0WXViaWtleUR1cmF0aW9uID4gMCkgP1xuICAgICAgKHByZVl1YmlrZXlEdXJhdGlvbiArIHBvc3RZdWJpa2V5RHVyYXRpb24pIDogMDtcblxuICAgIHRyYWNrKFxuICAgICAgQ09OTkVDVElPTl9FVkVOVCxcbiAgICAgIHtcbiAgICAgICAgZXJyb3I6IHN1Y2NlZWQgPyAnMCcgOiAnMScsXG4gICAgICAgIGV4Y2VwdGlvbjogZSA/IGVycm9yLnN0cmluZ2lmeUVycm9yKGUpIDogJycsXG4gICAgICAgIGR1cmF0aW9uOiAoRGF0ZS5ub3coKSAtIHRoaXMuX2Nvbm5lY3Rpb25TdGFydFRpbWUpLnRvU3RyaW5nKCksXG4gICAgICAgIHByZVl1YmlrZXlEdXJhdGlvbjogcHJlWXViaWtleUR1cmF0aW9uLnRvU3RyaW5nKCksXG4gICAgICAgIHBvc3RZdWJpa2V5RHVyYXRpb246IHBvc3RZdWJpa2V5RHVyYXRpb24udG9TdHJpbmcoKSxcbiAgICAgICAgcmVhbER1cmF0aW9uOiByZWFsRHVyYXRpb24udG9TdHJpbmcoKSxcbiAgICAgICAgaG9zdDogdGhpcy5fY29uZmlnLmhvc3QsXG4gICAgICAgIHNzaFBvcnQ6IHRoaXMuX2NvbmZpZy5zc2hQb3J0LnRvU3RyaW5nKCksXG4gICAgICAgIHVzZXJuYW1lOiB0aGlzLl9jb25maWcudXNlcm5hbWUsXG4gICAgICAgIHJlbW90ZVNlcnZlckNvbW1hbmQ6IHRoaXMuX2NvbmZpZy5yZW1vdGVTZXJ2ZXJDb21tYW5kLFxuICAgICAgICBjd2Q6IHRoaXMuX2NvbmZpZy5jd2QsXG4gICAgICAgIGF1dGhNZXRob2Q6IHRoaXMuX2NvbmZpZy5hdXRoTWV0aG9kLFxuICAgICAgfSxcbiAgICApO1xuXG4gICAgdGhpcy5fZXhwaXJlZCA9IHRydWU7XG4gIH1cbn1cbiJdfQ==
