
/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

/**
 * `Definitions` encodes all of the information in a service defintion file that is required to
 * generate a remote proxy.
 */

// $FlowIssue

// A top level function.

// An interface class.

// A type alias.

// $FlowIssue
// Type aliases.

// Nullable type.

// Functions.

// Primitive types.

// Literal types.

// Possible Return formats.

// Container Types.
// This is filled in for unions of object types during validation.

// Represents a named, custom type.

// Babel Definitions
// TODO: Move these to external-interfaces package.

Object.defineProperty(exports, '__esModule', {
  value: true
});
// Primitive types.
// Container types.
// Return types.
// Literal types.
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBwZmw1Mm5wdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLXNlcnZpY2UtcGFyc2VyL2xpYi90eXBlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXLENBQUMiLCJmaWxlIjoiL3Zhci9mb2xkZXJzL3hmL3JzcGg0X2M1NzMxNXJzNTd4eHNkc2tyeG52MzZ0MC9UL3RtcHBmbDUybnB1Ymxpc2hfcGFja2FnZXMvbnBtL251Y2xpZGUtc2VydmljZS1wYXJzZXIvbGliL3R5cGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBiYWJlbCc7XG4vKiBAZmxvdyAqL1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIGxpY2Vuc2UgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBpblxuICogdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuZGVjbGFyZSBtb2R1bGUgJ21vZHVsZScge1xuICBkZWNsYXJlIGZ1bmN0aW9uIF9yZXNvbHZlRmlsZW5hbWUoZmlsZW5hbWU6IHN0cmluZywgbW9kdWxlOiBhbnkpOiBzdHJpbmc7XG59XG5cbi8qKlxuICogYERlZmluaXRpb25zYCBlbmNvZGVzIGFsbCBvZiB0aGUgaW5mb3JtYXRpb24gaW4gYSBzZXJ2aWNlIGRlZmludGlvbiBmaWxlIHRoYXQgaXMgcmVxdWlyZWQgdG9cbiAqIGdlbmVyYXRlIGEgcmVtb3RlIHByb3h5LlxuICovXG5leHBvcnQgdHlwZSBEZWZpbml0aW9ucyA9IE1hcDxzdHJpbmcsIERlZmluaXRpb24+O1xuXG4vLyAkRmxvd0lzc3VlXG5leHBvcnQgdHlwZSBEZWZpbml0aW9uID0gRnVuY3Rpb25EZWZpbml0aW9uIHwgSW50ZXJmYWNlRGVmaW5pdGlvbiB8IEFsaWFzRGVmaW5pdGlvbjtcblxuLy8gQSB0b3AgbGV2ZWwgZnVuY3Rpb24uXG5leHBvcnQgdHlwZSBGdW5jdGlvbkRlZmluaXRpb24gPSB7XG4gIGtpbmQ6ICdmdW5jdGlvbic7XG4gIG5hbWU6IHN0cmluZztcbiAgbG9jYXRpb246IExvY2F0aW9uO1xuICB0eXBlOiBGdW5jdGlvblR5cGU7XG59O1xuXG4vLyBBbiBpbnRlcmZhY2UgY2xhc3MuXG5leHBvcnQgdHlwZSBJbnRlcmZhY2VEZWZpbml0aW9uID0ge1xuICBraW5kOiAnaW50ZXJmYWNlJztcbiAgbmFtZTogc3RyaW5nO1xuICBsb2NhdGlvbjogTG9jYXRpb247XG4gIGNvbnN0cnVjdG9yQXJnczogQXJyYXk8VHlwZT47XG4gIGluc3RhbmNlTWV0aG9kczogTWFwPHN0cmluZywgRnVuY3Rpb25UeXBlPjtcbiAgc3RhdGljTWV0aG9kczogTWFwPHN0cmluZywgRnVuY3Rpb25UeXBlPjtcbn07XG5cbi8vIEEgdHlwZSBhbGlhcy5cbmV4cG9ydCB0eXBlIEFsaWFzRGVmaW5pdGlvbiA9IHtcbiAga2luZDogJ2FsaWFzJztcbiAgbmFtZTogc3RyaW5nO1xuICBsb2NhdGlvbjogTG9jYXRpb247XG4gIGRlZmluaXRpb24/OiBUeXBlO1xufTtcblxuLy8gJEZsb3dJc3N1ZVxuZXhwb3J0IHR5cGUgVHlwZSA9IE51bGxhYmxlVHlwZSB8IE1peGVkVHlwZSB8XG4gIEFueVR5cGUgfCBTdHJpbmdUeXBlIHwgQm9vbGVhblR5cGUgfCBOdW1iZXJUeXBlIHwgLy8gUHJpbWl0aXZlIHR5cGVzLlxuICBPYmplY3RUeXBlIHwgQXJyYXlUeXBlIHwgTWFwVHlwZSB8IFNldFR5cGUgfCBUdXBsZVR5cGUgfCAvLyBDb250YWluZXIgdHlwZXMuXG4gIFZvaWRUeXBlIHwgUHJvbWlzZVR5cGUgfCBPYnNlcnZhYmxlVHlwZSB8IC8vIFJldHVybiB0eXBlcy5cbiAgU3RyaW5nTGl0ZXJhbFR5cGUgfCBOdW1iZXJMaXRlcmFsVHlwZSB8IEJvb2xlYW5MaXRlcmFsVHlwZSB8IC8vIExpdGVyYWwgdHlwZXMuXG4gIE5hbWVkVHlwZSB8IEZ1bmN0aW9uVHlwZSB8IFVuaW9uVHlwZTsgLy8gVHlwZSBhbGlhc2VzLlxuXG4vLyBOdWxsYWJsZSB0eXBlLlxuZXhwb3J0IHR5cGUgTnVsbGFibGVUeXBlID0geyBsb2NhdGlvbjogTG9jYXRpb247IGtpbmQ6ICdudWxsYWJsZSc7IHR5cGU6IFR5cGUgfTtcblxuLy8gRnVuY3Rpb25zLlxuZXhwb3J0IHR5cGUgRnVuY3Rpb25UeXBlID0ge1xuICBsb2NhdGlvbjogTG9jYXRpb247XG4gIGtpbmQ6ICdmdW5jdGlvbic7XG4gIGFyZ3VtZW50VHlwZXM6IEFycmF5PFR5cGU+O1xuICByZXR1cm5UeXBlOiBUeXBlO1xufVxuXG4vLyBQcmltaXRpdmUgdHlwZXMuXG5leHBvcnQgdHlwZSBBbnlUeXBlID0geyBsb2NhdGlvbjogTG9jYXRpb247IGtpbmQ6ICdhbnknIH07XG5leHBvcnQgdHlwZSBNaXhlZFR5cGUgPSB7IGxvY2F0aW9uOiBMb2NhdGlvbjsga2luZDogJ21peGVkJyB9O1xuZXhwb3J0IHR5cGUgU3RyaW5nVHlwZSA9IHsgbG9jYXRpb246IExvY2F0aW9uOyBraW5kOiAnc3RyaW5nJyB9O1xuZXhwb3J0IHR5cGUgQm9vbGVhblR5cGUgPSB7IGxvY2F0aW9uOiBMb2NhdGlvbjsga2luZDogJ2Jvb2xlYW4nIH07XG5leHBvcnQgdHlwZSBOdW1iZXJUeXBlID0geyBsb2NhdGlvbjogTG9jYXRpb247IGtpbmQ6ICdudW1iZXInIH07XG5cbi8vIExpdGVyYWwgdHlwZXMuXG5leHBvcnQgdHlwZSBMaXRlcmFsVHlwZSA9IFN0cmluZ0xpdGVyYWxUeXBlIHwgTnVtYmVyTGl0ZXJhbFR5cGUgfCBCb29sZWFuTGl0ZXJhbFR5cGU7XG5leHBvcnQgdHlwZSBTdHJpbmdMaXRlcmFsVHlwZSA9IHsgbG9jYXRpb246IExvY2F0aW9uOyBraW5kOiAnc3RyaW5nLWxpdGVyYWwnOyB2YWx1ZTogc3RyaW5nIH07XG5leHBvcnQgdHlwZSBOdW1iZXJMaXRlcmFsVHlwZSA9IHsgbG9jYXRpb246IExvY2F0aW9uOyBraW5kOiAnbnVtYmVyLWxpdGVyYWwnOyB2YWx1ZTogbnVtYmVyIH07XG5leHBvcnQgdHlwZSBCb29sZWFuTGl0ZXJhbFR5cGUgPSB7IGxvY2F0aW9uOiBMb2NhdGlvbjsga2luZDogJ2Jvb2xlYW4tbGl0ZXJhbCc7IHZhbHVlOiBib29sZWFuIH07XG5cbi8vIFBvc3NpYmxlIFJldHVybiBmb3JtYXRzLlxuZXhwb3J0IHR5cGUgVm9pZFR5cGUgPSB7IGxvY2F0aW9uOiBMb2NhdGlvbjsga2luZDogJ3ZvaWQnIH07XG5leHBvcnQgdHlwZSBQcm9taXNlVHlwZSA9IHsgbG9jYXRpb246IExvY2F0aW9uOyBraW5kOiAncHJvbWlzZSc7IHR5cGU6IFR5cGUgfTtcbmV4cG9ydCB0eXBlIE9ic2VydmFibGVUeXBlID0geyBsb2NhdGlvbjogTG9jYXRpb247IGtpbmQ6ICdvYnNlcnZhYmxlJzsgdHlwZTogVHlwZSB9O1xuXG4vLyBDb250YWluZXIgVHlwZXMuXG5leHBvcnQgdHlwZSBBcnJheVR5cGUgPSB7IGxvY2F0aW9uOiBMb2NhdGlvbjsga2luZDogJ2FycmF5JzsgdHlwZTogVHlwZTsgfTtcbmV4cG9ydCB0eXBlIFNldFR5cGUgPSB7IGxvY2F0aW9uOiBMb2NhdGlvbjsga2luZDogJ3NldCc7IHR5cGU6IFR5cGU7IH07XG5leHBvcnQgdHlwZSBNYXBUeXBlID0geyBsb2NhdGlvbjogTG9jYXRpb247IGtpbmQ6ICdtYXAnOyBrZXlUeXBlOiBUeXBlOyB2YWx1ZVR5cGU6IFR5cGU7IH07XG5leHBvcnQgdHlwZSBPYmplY3RUeXBlID0geyBsb2NhdGlvbjogTG9jYXRpb247IGtpbmQ6ICdvYmplY3QnOyBmaWVsZHM6IEFycmF5PE9iamVjdEZpZWxkPiB9O1xuZXhwb3J0IHR5cGUgT2JqZWN0RmllbGQgPSB7XG4gIGxvY2F0aW9uOiBMb2NhdGlvbjtcbiAgbmFtZTogc3RyaW5nO1xuICB0eXBlOiBUeXBlO1xuICBvcHRpb25hbDogYm9vbGVhbjtcbn07XG5leHBvcnQgdHlwZSBUdXBsZVR5cGUgPSB7IGxvY2F0aW9uOiBMb2NhdGlvbjsga2luZDogJ3R1cGxlJzsgdHlwZXM6IEFycmF5PFR5cGU+OyB9O1xuXG5leHBvcnQgdHlwZSBVbmlvblR5cGUgPSB7XG4gIGxvY2F0aW9uOiBMb2NhdGlvbjtcbiAga2luZDogJ3VuaW9uJztcbiAgdHlwZXM6IEFycmF5PFR5cGU+O1xuICBkaXNjcmltaW5hbnRGaWVsZD86IHN0cmluZzsgLy8gVGhpcyBpcyBmaWxsZWQgaW4gZm9yIHVuaW9ucyBvZiBvYmplY3QgdHlwZXMgZHVyaW5nIHZhbGlkYXRpb24uXG59O1xuXG4vLyBSZXByZXNlbnRzIGEgbmFtZWQsIGN1c3RvbSB0eXBlLlxuZXhwb3J0IHR5cGUgTmFtZWRUeXBlID0geyBsb2NhdGlvbjogTG9jYXRpb247IGtpbmQ6ICduYW1lZCc7IG5hbWU6IHN0cmluZyB9O1xuXG5leHBvcnQgdHlwZSBMb2NhdGlvbiA9IFNvdXJjZUxvY2F0aW9uIHwgQnVpbHRpbkxvY2F0aW9uO1xuXG5leHBvcnQgdHlwZSBTb3VyY2VMb2NhdGlvbiA9IHtcbiAgdHlwZTogJ3NvdXJjZSc7XG4gIGZpbGVOYW1lOiBzdHJpbmc7XG4gIGxpbmU6IG51bWJlcjtcbn07XG5cbmV4cG9ydCB0eXBlIEJ1aWx0aW5Mb2NhdGlvbiA9IHtcbiAgdHlwZTogJ2J1aWx0aW4nO1xufTtcblxuLy8gQmFiZWwgRGVmaW5pdGlvbnNcbi8vIFRPRE86IE1vdmUgdGhlc2UgdG8gZXh0ZXJuYWwtaW50ZXJmYWNlcyBwYWNrYWdlLlxuXG5leHBvcnQgdHlwZSBCYWJlbCROb2RlID0ge1xuICBsb2M6IEJhYmVsJFJhbmdlO1xufTtcblxuZXhwb3J0IHR5cGUgQmFiZWwkUmFuZ2UgPSB7XG4gIHN0YXJ0OiBCYWJlbCRMb2NhdGlvbjtcbiAgZW5kOiBCYWJlbCRMb2NhdGlvbjtcbn07XG5cbmV4cG9ydCB0eXBlIEJhYmVsJExvY2F0aW9uID0ge1xuICBsaW5lOiBudW1iZXI7XG59O1xuIl19
