
/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { var callNext = step.bind(null, 'next'); var callThrow = step.bind(null, 'throw'); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(callNext, callThrow); } } callNext(); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _require = require('events');

var EventEmitter = _require.EventEmitter;

var _require2 = require('./config');

var loadConfigsOfServiceWithoutServiceFramework = _require2.loadConfigsOfServiceWithoutServiceFramework;

var NuclideLocalEventbus = (function (_EventEmitter) {
  _inherits(NuclideLocalEventbus, _EventEmitter);

  function NuclideLocalEventbus() {
    var _this = this;

    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    _classCallCheck(this, NuclideLocalEventbus);

    _get(Object.getPrototypeOf(NuclideLocalEventbus.prototype), 'constructor', this).call(this);
    this._options = options;
    this._services = {};

    this._enabledServices = loadConfigsOfServiceWithoutServiceFramework();

    this._enabledServices.forEach(function (service_path) {
      var _require3 = require(service_path);

      var services = _require3.services;

      for (var serviceId in services) {
        _this._services[serviceId] = services[serviceId];
      }
    });

    // Run initialize after all services registered if exists.
    this._enabledServices.forEach(function (service_path) {
      var _require4 = require(service_path);

      var initialize = _require4.initialize;

      if (initialize) {
        initialize(_this);
      }
    });

    var _require5 = require('nuclide-commons');

    var fsPromise = _require5.fsPromise;

    // readFile and writeFile aren't exposed as services for performance optimization.
    this._services['/fs/readFile'] = { handler: fsPromise.readFile };
    this._services['/fs/writeFile'] = { handler: fsPromise.writeFile };
  }

  _createClass(NuclideLocalEventbus, [{
    key: 'testConnection',
    value: function testConnection() {
      return Promise.resolve();
    }
  }, {
    key: 'callMethod',
    value: _asyncToGenerator(function* (serviceName, methodName, methodArgs, extraOptions) {

      var serviceId = '/' + serviceName + '/' + methodName;
      // extend the default options with the extra options
      var service = this._services[serviceId];
      if (!service) {
        throw new Error('Cannot call a non registered local service with id: ' + serviceId);
      }
      return service.handler.apply(this, methodArgs);
    })
  }, {
    key: 'callService',
    value: function callService(serviceName, args) {
      var serviceFunction = this._services[serviceName];
      if (!serviceFunction) {
        throw Error('No service registered with name: ' + serviceName);
      }
      return serviceFunction.handler.apply(this, args);
    }
  }, {
    key: 'close',
    value: function close() {
      var _this2 = this;

      this._enabledServices.forEach(function (service_path) {
        var _require6 = require(service_path);

        var shutdown = _require6.shutdown;

        if (shutdown) {
          shutdown(_this2);
        }
      });
    }
  }]);

  return NuclideLocalEventbus;
})(EventEmitter);

module.exports = NuclideLocalEventbus;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBwZmw1Mm5wdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLXNlcnZlci9saWIvTnVjbGlkZUxvY2FsRXZlbnRidXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQVdXLE9BQU8sQ0FBQyxRQUFRLENBQUM7O0lBQWpDLFlBQVksWUFBWixZQUFZOztnQkFFbUMsT0FBTyxDQUFDLFVBQVUsQ0FBQzs7SUFBbEUsMkNBQTJDLGFBQTNDLDJDQUEyQzs7SUFJNUMsb0JBQW9CO1lBQXBCLG9CQUFvQjs7QUFDYixXQURQLG9CQUFvQixHQUNFOzs7UUFBZCxPQUFPLHlEQUFHLEVBQUU7OzBCQURwQixvQkFBb0I7O0FBRXRCLCtCQUZFLG9CQUFvQiw2Q0FFZDtBQUNSLFFBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO0FBQ3hCLFFBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDOztBQUVwQixRQUFJLENBQUMsZ0JBQWdCLEdBQUcsMkNBQTJDLEVBQUUsQ0FBQzs7QUFFdEUsUUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxVQUFDLFlBQVksRUFBSztzQkFDM0IsT0FBTyxDQUFDLFlBQVksQ0FBQzs7VUFBakMsUUFBUSxhQUFSLFFBQVE7O0FBQ2YsV0FBSyxJQUFNLFNBQVMsSUFBSSxRQUFRLEVBQUU7QUFDaEMsY0FBSyxTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO09BQ2pEO0tBQ0YsQ0FBQyxDQUFDOzs7QUFHSCxRQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLFVBQUMsWUFBWSxFQUFLO3NCQUN6QixPQUFPLENBQUMsWUFBWSxDQUFDOztVQUFuQyxVQUFVLGFBQVYsVUFBVTs7QUFDakIsVUFBSSxVQUFVLEVBQUU7QUFDZCxrQkFBVSxPQUFNLENBQUM7T0FDbEI7S0FDRixDQUFDLENBQUM7O29CQUVpQixPQUFPLENBQUMsaUJBQWlCLENBQUM7O1FBQXZDLFNBQVMsYUFBVCxTQUFTOzs7QUFHaEIsUUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsUUFBUSxFQUFDLENBQUM7QUFDL0QsUUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsR0FBRyxFQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsU0FBUyxFQUFDLENBQUM7R0FDbEU7O2VBNUJHLG9CQUFvQjs7V0E4QlYsMEJBQWtCO0FBQzlCLGFBQU8sT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO0tBQzFCOzs7NkJBRWUsV0FDWixXQUFtQixFQUNuQixVQUFrQixFQUNsQixVQUF1QixFQUN2QixZQUFrQixFQUNHOztBQUV2QixVQUFNLFNBQVMsR0FBRyxHQUFHLEdBQUcsV0FBVyxHQUFHLEdBQUcsR0FBRyxVQUFVLENBQUM7O0FBRXZELFVBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDMUMsVUFBSSxDQUFDLE9BQU8sRUFBRTtBQUNaLGNBQU0sSUFBSSxLQUFLLENBQUMsc0RBQXNELEdBQUcsU0FBUyxDQUFDLENBQUM7T0FDckY7QUFDRCxhQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztLQUNoRDs7O1dBRVUscUJBQUMsV0FBbUIsRUFBRSxJQUFnQixFQUFnQjtBQUMvRCxVQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3BELFVBQUksQ0FBQyxlQUFlLEVBQUU7QUFDcEIsY0FBTSxLQUFLLENBQUMsbUNBQW1DLEdBQUcsV0FBVyxDQUFDLENBQUM7T0FDaEU7QUFDRCxhQUFPLGVBQWUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztLQUNsRDs7O1dBRUksaUJBQVM7OztBQUNaLFVBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsVUFBQyxZQUFZLEVBQUs7d0JBQzNCLE9BQU8sQ0FBQyxZQUFZLENBQUM7O1lBQWpDLFFBQVEsYUFBUixRQUFROztBQUNmLFlBQUksUUFBUSxFQUFFO0FBQ1osa0JBQVEsUUFBTSxDQUFDO1NBQ2hCO09BQ0YsQ0FBQyxDQUFDO0tBQ0o7OztTQWpFRyxvQkFBb0I7R0FBUyxZQUFZOztBQW9FL0MsTUFBTSxDQUFDLE9BQU8sR0FBRyxvQkFBb0IsQ0FBQyIsImZpbGUiOiIvdmFyL2ZvbGRlcnMveGYvcnNwaDRfYzU3MzE1cnM1N3h4c2Rza3J4bnYzNnQwL1QvdG1wcGZsNTJucHVibGlzaF9wYWNrYWdlcy9ucG0vbnVjbGlkZS1zZXJ2ZXIvbGliL051Y2xpZGVMb2NhbEV2ZW50YnVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBiYWJlbCc7XG4vKiBAZmxvdyAqL1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIGxpY2Vuc2UgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBpblxuICogdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3Qge0V2ZW50RW1pdHRlcn0gPSByZXF1aXJlKCdldmVudHMnKTtcblxuY29uc3Qge2xvYWRDb25maWdzT2ZTZXJ2aWNlV2l0aG91dFNlcnZpY2VGcmFtZXdvcmt9ID0gcmVxdWlyZSgnLi9jb25maWcnKTtcblxuXG5cbmNsYXNzIE51Y2xpZGVMb2NhbEV2ZW50YnVzIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9vcHRpb25zID0gb3B0aW9ucztcbiAgICB0aGlzLl9zZXJ2aWNlcyA9IHt9O1xuXG4gICAgdGhpcy5fZW5hYmxlZFNlcnZpY2VzID0gbG9hZENvbmZpZ3NPZlNlcnZpY2VXaXRob3V0U2VydmljZUZyYW1ld29yaygpO1xuXG4gICAgdGhpcy5fZW5hYmxlZFNlcnZpY2VzLmZvckVhY2goKHNlcnZpY2VfcGF0aCkgPT4ge1xuICAgICAgY29uc3Qge3NlcnZpY2VzfSA9IHJlcXVpcmUoc2VydmljZV9wYXRoKTtcbiAgICAgIGZvciAoY29uc3Qgc2VydmljZUlkIGluIHNlcnZpY2VzKSB7XG4gICAgICAgIHRoaXMuX3NlcnZpY2VzW3NlcnZpY2VJZF0gPSBzZXJ2aWNlc1tzZXJ2aWNlSWRdO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gUnVuIGluaXRpYWxpemUgYWZ0ZXIgYWxsIHNlcnZpY2VzIHJlZ2lzdGVyZWQgaWYgZXhpc3RzLlxuICAgIHRoaXMuX2VuYWJsZWRTZXJ2aWNlcy5mb3JFYWNoKChzZXJ2aWNlX3BhdGgpID0+IHtcbiAgICAgIGNvbnN0IHtpbml0aWFsaXplfSA9IHJlcXVpcmUoc2VydmljZV9wYXRoKTtcbiAgICAgIGlmIChpbml0aWFsaXplKSB7XG4gICAgICAgIGluaXRpYWxpemUodGhpcyk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBjb25zdCB7ZnNQcm9taXNlfSA9IHJlcXVpcmUoJ251Y2xpZGUtY29tbW9ucycpO1xuXG4gICAgLy8gcmVhZEZpbGUgYW5kIHdyaXRlRmlsZSBhcmVuJ3QgZXhwb3NlZCBhcyBzZXJ2aWNlcyBmb3IgcGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9uLlxuICAgIHRoaXMuX3NlcnZpY2VzWycvZnMvcmVhZEZpbGUnXSA9IHtoYW5kbGVyOiBmc1Byb21pc2UucmVhZEZpbGV9O1xuICAgIHRoaXMuX3NlcnZpY2VzWycvZnMvd3JpdGVGaWxlJ10gPSB7aGFuZGxlcjogZnNQcm9taXNlLndyaXRlRmlsZX07XG4gIH1cblxuICB0ZXN0Q29ubmVjdGlvbigpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH1cblxuICBhc3luYyBjYWxsTWV0aG9kKFxuICAgICAgc2VydmljZU5hbWU6IHN0cmluZyxcbiAgICAgIG1ldGhvZE5hbWU6IHN0cmluZyxcbiAgICAgIG1ldGhvZEFyZ3M6ID9BcnJheTxhbnk+LFxuICAgICAgZXh0cmFPcHRpb25zOiA/YW55XG4gICAgKTogUHJvbWlzZTxzdHJpbmd8YW55PiB7XG5cbiAgICBjb25zdCBzZXJ2aWNlSWQgPSAnLycgKyBzZXJ2aWNlTmFtZSArICcvJyArIG1ldGhvZE5hbWU7XG4gICAgLy8gZXh0ZW5kIHRoZSBkZWZhdWx0IG9wdGlvbnMgd2l0aCB0aGUgZXh0cmEgb3B0aW9uc1xuICAgIGNvbnN0IHNlcnZpY2UgPSB0aGlzLl9zZXJ2aWNlc1tzZXJ2aWNlSWRdO1xuICAgIGlmICghc2VydmljZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY2FsbCBhIG5vbiByZWdpc3RlcmVkIGxvY2FsIHNlcnZpY2Ugd2l0aCBpZDogJyArIHNlcnZpY2VJZCk7XG4gICAgfVxuICAgIHJldHVybiBzZXJ2aWNlLmhhbmRsZXIuYXBwbHkodGhpcywgbWV0aG9kQXJncyk7XG4gIH1cblxuICBjYWxsU2VydmljZShzZXJ2aWNlTmFtZTogc3RyaW5nLCBhcmdzOiBBcnJheTxhbnk+KTogUHJvbWlzZTxhbnk+IHtcbiAgICBjb25zdCBzZXJ2aWNlRnVuY3Rpb24gPSB0aGlzLl9zZXJ2aWNlc1tzZXJ2aWNlTmFtZV07XG4gICAgaWYgKCFzZXJ2aWNlRnVuY3Rpb24pIHtcbiAgICAgIHRocm93IEVycm9yKCdObyBzZXJ2aWNlIHJlZ2lzdGVyZWQgd2l0aCBuYW1lOiAnICsgc2VydmljZU5hbWUpO1xuICAgIH1cbiAgICByZXR1cm4gc2VydmljZUZ1bmN0aW9uLmhhbmRsZXIuYXBwbHkodGhpcywgYXJncyk7XG4gIH1cblxuICBjbG9zZSgpOiB2b2lkIHtcbiAgICB0aGlzLl9lbmFibGVkU2VydmljZXMuZm9yRWFjaCgoc2VydmljZV9wYXRoKSA9PiB7XG4gICAgICBjb25zdCB7c2h1dGRvd259ID0gcmVxdWlyZShzZXJ2aWNlX3BhdGgpO1xuICAgICAgaWYgKHNodXRkb3duKSB7XG4gICAgICAgIHNodXRkb3duKHRoaXMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gTnVjbGlkZUxvY2FsRXZlbnRidXM7XG4iXX0=
