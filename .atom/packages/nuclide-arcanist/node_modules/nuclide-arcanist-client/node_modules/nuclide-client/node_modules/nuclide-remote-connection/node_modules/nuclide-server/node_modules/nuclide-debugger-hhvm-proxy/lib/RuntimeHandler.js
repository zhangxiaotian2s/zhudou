Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { var callNext = step.bind(null, 'next'); var callThrow = step.bind(null, 'throw'); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(callNext, callThrow); } } callNext(); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var _helpers = require('./helpers');

var _Handler2 = require('./Handler');

var _Handler3 = _interopRequireDefault(_Handler2);

// Handles all 'Runtime.*' Chrome dev tools messages
'use babel';

var RuntimeHandler = (function (_Handler) {
  _inherits(RuntimeHandler, _Handler);

  function RuntimeHandler(clientCallback, connectionMultiplexer) {
    _classCallCheck(this, RuntimeHandler);

    _get(Object.getPrototypeOf(RuntimeHandler.prototype), 'constructor', this).call(this, 'Runtime', clientCallback);
    this._connectionMultiplexer = connectionMultiplexer;
  }

  _createClass(RuntimeHandler, [{
    key: 'handleMethod',
    value: _asyncToGenerator(function* (id, method, params) {
      switch (method) {
        case 'enable':
          this._notifyExecutionContext(id);
          break;

        case 'getProperties':
          yield this._getProperties(id, params);
          break;

        case 'evaluate':
          // Chrome may call 'evaluate' for other purposes like auto-completion etc..
          // and we are only interested in console evaluation.
          if (params.objectGroup === 'console') {
            yield this._evaluate(id, params);
          } else {
            this.unknownMethod(id, method, params);
          }
          break;

        default:
          this.unknownMethod(id, method, params);
          break;
      }
    })
  }, {
    key: '_notifyExecutionContext',
    value: function _notifyExecutionContext(id) {
      this.sendMethod('Runtime.executionContextCreated', {
        'context': {
          'id': 1,
          'frameId': _helpers.DUMMY_FRAME_ID,
          'name': 'hhvm: TODO: mangle in pid, idekey, script from connection'
        }
      });
      this.replyToCommand(id, {});
    }
  }, {
    key: '_getProperties',
    value: _asyncToGenerator(function* (id, params) {
      // params also has properties:
      //    ownProperties
      //    generatePreview
      var objectId = params.objectId;
      var accessorPropertiesOnly = params.accessorPropertiesOnly;

      var result = undefined;
      if (!accessorPropertiesOnly) {
        result = yield this._connectionMultiplexer.getProperties(objectId);
      } else {
        // TODO: Handle remaining params
        result = [];
      }
      this.replyToCommand(id, { result: result });
    })
  }, {
    key: '_evaluate',
    value: _asyncToGenerator(function* (id, params) {
      var result = yield this._connectionMultiplexer.runtimeEvaluate(params.expression);
      this.replyToCommand(id, result);
    })
  }]);

  return RuntimeHandler;
})(_Handler3['default']);

exports.RuntimeHandler = RuntimeHandler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBwZmw1Mm5wdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLWRlYnVnZ2VyLWhodm0tcHJveHkvbGliL1J1bnRpbWVIYW5kbGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1QkFZNkIsV0FBVzs7d0JBQ3BCLFdBQVc7Ozs7O0FBYi9CLFdBQVcsQ0FBQzs7SUFtQkMsY0FBYztZQUFkLGNBQWM7O0FBR2QsV0FIQSxjQUFjLENBSXZCLGNBQThCLEVBQzlCLHFCQUE0QyxFQUM1QzswQkFOUyxjQUFjOztBQU92QiwrQkFQUyxjQUFjLDZDQU9qQixTQUFTLEVBQUUsY0FBYyxFQUFFO0FBQ2pDLFFBQUksQ0FBQyxzQkFBc0IsR0FBRyxxQkFBcUIsQ0FBQztHQUNyRDs7ZUFUVSxjQUFjOzs2QkFXUCxXQUFDLEVBQVUsRUFBRSxNQUFjLEVBQUUsTUFBYyxFQUFXO0FBQ3RFLGNBQVEsTUFBTTtBQUNaLGFBQUssUUFBUTtBQUNYLGNBQUksQ0FBQyx1QkFBdUIsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNqQyxnQkFBTTs7QUFBQSxBQUVSLGFBQUssZUFBZTtBQUNsQixnQkFBTSxJQUFJLENBQUMsY0FBYyxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUN0QyxnQkFBTTs7QUFBQSxBQUVSLGFBQUssVUFBVTs7O0FBR2IsY0FBSSxNQUFNLENBQUMsV0FBVyxLQUFLLFNBQVMsRUFBRTtBQUNwQyxrQkFBTSxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztXQUNsQyxNQUFNO0FBQ0wsZ0JBQUksQ0FBQyxhQUFhLENBQUMsRUFBRSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztXQUN4QztBQUNELGdCQUFNOztBQUFBLEFBRVI7QUFDRSxjQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDdkMsZ0JBQU07QUFBQSxPQUNUO0tBQ0Y7OztXQUVzQixpQ0FBQyxFQUFVLEVBQVE7QUFDeEMsVUFBSSxDQUFDLFVBQVUsQ0FBQyxpQ0FBaUMsRUFDL0M7QUFDRSxpQkFBUyxFQUFFO0FBQ1QsY0FBSSxFQUFFLENBQUM7QUFDUCxtQkFBUyxXQWpEWCxjQUFjLEFBaURhO0FBQ3pCLGdCQUFNLEVBQUUsMkRBQTJEO1NBQ3BFO09BQ0YsQ0FBQyxDQUFDO0FBQ0wsVUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDN0I7Ozs2QkFFbUIsV0FBQyxFQUFVLEVBQUUsTUFBYyxFQUFXOzs7O1VBSWpELFFBQVEsR0FBNEIsTUFBTSxDQUExQyxRQUFRO1VBQUUsc0JBQXNCLEdBQUksTUFBTSxDQUFoQyxzQkFBc0I7O0FBQ3ZDLFVBQUksTUFBTSxZQUFBLENBQUM7QUFDWCxVQUFJLENBQUMsc0JBQXNCLEVBQUU7QUFDM0IsY0FBTSxHQUFHLE1BQU0sSUFBSSxDQUFDLHNCQUFzQixDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztPQUNwRSxNQUFNOztBQUVMLGNBQU0sR0FBRyxFQUFFLENBQUM7T0FDYjtBQUNELFVBQUksQ0FBQyxjQUFjLENBQUMsRUFBRSxFQUFFLEVBQUMsTUFBTSxFQUFOLE1BQU0sRUFBQyxDQUFDLENBQUM7S0FDbkM7Ozs2QkFFYyxXQUFDLEVBQVUsRUFBRSxNQUFjLEVBQVc7QUFDbkQsVUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsc0JBQXNCLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNwRixVQUFJLENBQUMsY0FBYyxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztLQUNqQzs7O1NBbkVVLGNBQWMiLCJmaWxlIjoiL3Zhci9mb2xkZXJzL3hmL3JzcGg0X2M1NzMxNXJzNTd4eHNkc2tyeG52MzZ0MC9UL3RtcHBmbDUybnB1Ymxpc2hfcGFja2FnZXMvbnBtL251Y2xpZGUtZGVidWdnZXItaGh2bS1wcm94eS9saWIvUnVudGltZUhhbmRsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcbi8qIEBmbG93ICovXG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGluXG4gKiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5cbmltcG9ydCB7RFVNTVlfRlJBTUVfSUR9IGZyb20gJy4vaGVscGVycyc7XG5pbXBvcnQgSGFuZGxlciBmcm9tICcuL0hhbmRsZXInO1xuXG5pbXBvcnQgdHlwZSB7Q29ubmVjdGlvbk11bHRpcGxleGVyfSBmcm9tICcuL0Nvbm5lY3Rpb25NdWx0aXBsZXhlcic7XG5pbXBvcnQgdHlwZSB7Q2xpZW50Q2FsbGJhY2t9IGZyb20gJy4vQ2xpZW50Q2FsbGJhY2snO1xuXG4vLyBIYW5kbGVzIGFsbCAnUnVudGltZS4qJyBDaHJvbWUgZGV2IHRvb2xzIG1lc3NhZ2VzXG5leHBvcnQgY2xhc3MgUnVudGltZUhhbmRsZXIgZXh0ZW5kcyBIYW5kbGVyIHtcbiAgX2Nvbm5lY3Rpb25NdWx0aXBsZXhlcjogQ29ubmVjdGlvbk11bHRpcGxleGVyO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIGNsaWVudENhbGxiYWNrOiBDbGllbnRDYWxsYmFjayxcbiAgICBjb25uZWN0aW9uTXVsdGlwbGV4ZXI6IENvbm5lY3Rpb25NdWx0aXBsZXhlclxuICApIHtcbiAgICBzdXBlcignUnVudGltZScsIGNsaWVudENhbGxiYWNrKTtcbiAgICB0aGlzLl9jb25uZWN0aW9uTXVsdGlwbGV4ZXIgPSBjb25uZWN0aW9uTXVsdGlwbGV4ZXI7XG4gIH1cblxuICBhc3luYyBoYW5kbGVNZXRob2QoaWQ6IG51bWJlciwgbWV0aG9kOiBzdHJpbmcsIHBhcmFtczogT2JqZWN0KTogUHJvbWlzZSB7XG4gICAgc3dpdGNoIChtZXRob2QpIHtcbiAgICAgIGNhc2UgJ2VuYWJsZSc6XG4gICAgICAgIHRoaXMuX25vdGlmeUV4ZWN1dGlvbkNvbnRleHQoaWQpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnZ2V0UHJvcGVydGllcyc6XG4gICAgICAgIGF3YWl0IHRoaXMuX2dldFByb3BlcnRpZXMoaWQsIHBhcmFtcyk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdldmFsdWF0ZSc6XG4gICAgICAgIC8vIENocm9tZSBtYXkgY2FsbCAnZXZhbHVhdGUnIGZvciBvdGhlciBwdXJwb3NlcyBsaWtlIGF1dG8tY29tcGxldGlvbiBldGMuLlxuICAgICAgICAvLyBhbmQgd2UgYXJlIG9ubHkgaW50ZXJlc3RlZCBpbiBjb25zb2xlIGV2YWx1YXRpb24uXG4gICAgICAgIGlmIChwYXJhbXMub2JqZWN0R3JvdXAgPT09ICdjb25zb2xlJykge1xuICAgICAgICAgIGF3YWl0IHRoaXMuX2V2YWx1YXRlKGlkLCBwYXJhbXMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMudW5rbm93bk1ldGhvZChpZCwgbWV0aG9kLCBwYXJhbXMpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aGlzLnVua25vd25NZXRob2QoaWQsIG1ldGhvZCwgcGFyYW1zKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgX25vdGlmeUV4ZWN1dGlvbkNvbnRleHQoaWQ6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuc2VuZE1ldGhvZCgnUnVudGltZS5leGVjdXRpb25Db250ZXh0Q3JlYXRlZCcsXG4gICAgICB7XG4gICAgICAgICdjb250ZXh0Jzoge1xuICAgICAgICAgICdpZCc6IDEsXG4gICAgICAgICAgJ2ZyYW1lSWQnOiBEVU1NWV9GUkFNRV9JRCxcbiAgICAgICAgICAnbmFtZSc6ICdoaHZtOiBUT0RPOiBtYW5nbGUgaW4gcGlkLCBpZGVrZXksIHNjcmlwdCBmcm9tIGNvbm5lY3Rpb24nLFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgdGhpcy5yZXBseVRvQ29tbWFuZChpZCwge30pO1xuICB9XG5cbiAgYXN5bmMgX2dldFByb3BlcnRpZXMoaWQ6IG51bWJlciwgcGFyYW1zOiBPYmplY3QpOiBQcm9taXNlIHtcbiAgICAvLyBwYXJhbXMgYWxzbyBoYXMgcHJvcGVydGllczpcbiAgICAvLyAgICBvd25Qcm9wZXJ0aWVzXG4gICAgLy8gICAgZ2VuZXJhdGVQcmV2aWV3XG4gICAgY29uc3Qge29iamVjdElkLCBhY2Nlc3NvclByb3BlcnRpZXNPbmx5fSA9IHBhcmFtcztcbiAgICBsZXQgcmVzdWx0O1xuICAgIGlmICghYWNjZXNzb3JQcm9wZXJ0aWVzT25seSkge1xuICAgICAgcmVzdWx0ID0gYXdhaXQgdGhpcy5fY29ubmVjdGlvbk11bHRpcGxleGVyLmdldFByb3BlcnRpZXMob2JqZWN0SWQpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBUT0RPOiBIYW5kbGUgcmVtYWluaW5nIHBhcmFtc1xuICAgICAgcmVzdWx0ID0gW107XG4gICAgfVxuICAgIHRoaXMucmVwbHlUb0NvbW1hbmQoaWQsIHtyZXN1bHR9KTtcbiAgfVxuXG4gIGFzeW5jIF9ldmFsdWF0ZShpZDogbnVtYmVyLCBwYXJhbXM6IE9iamVjdCk6IFByb21pc2Uge1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuX2Nvbm5lY3Rpb25NdWx0aXBsZXhlci5ydW50aW1lRXZhbHVhdGUocGFyYW1zLmV4cHJlc3Npb24pO1xuICAgIHRoaXMucmVwbHlUb0NvbW1hbmQoaWQsIHJlc3VsdCk7XG4gIH1cbn1cbiJdfQ==
