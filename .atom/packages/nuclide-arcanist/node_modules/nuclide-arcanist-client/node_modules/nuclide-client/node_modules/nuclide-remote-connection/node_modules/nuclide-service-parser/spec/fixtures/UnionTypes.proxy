"use babel";
import { Observable } from "rx";
import { trackTiming } from "nuclide-analytics";

module.exports = _client => {
  remoteModule = {}

  remoteModule.UnionFunc = function (arg0, arg1) {
    return Promise.all([_client.marshal(arg0, {
      location: {
        type: "source",
        fileName: "UnionTypes.def",
        line: 6
      },
      kind: "named",
      name: "SSU"
    }), _client.marshal(arg1, {
      location: {
        type: "source",
        fileName: "UnionTypes.def",
        line: 6
      },
      kind: "named",
      name: "MixedUnion"
    })]).then(args => _client.callRemoteFunction("UnionTypes/UnionFunc", "void", args));
  }

  remoteModule.ObjectUnionFunc = function (arg0) {
    return Promise.all([_client.marshal(arg0, {
      location: {
        type: "source",
        fileName: "UnionTypes.def",
        line: 20
      },
      kind: "named",
      name: "Location"
    })]).then(args => _client.callRemoteFunction("UnionTypes/ObjectUnionFunc", "void", args));
  }

  remoteModule.TypeFunc = function (arg0) {
    return Promise.all([_client.marshal(arg0, {
      location: {
        type: "source",
        fileName: "UnionTypes.def",
        line: 111
      },
      kind: "named",
      name: "Type"
    })]).then(args => _client.callRemoteFunction("UnionTypes/TypeFunc", "void", args));
  }

  remoteModule.MDUFunc = function (arg0) {
    return Promise.all([_client.marshal(arg0, {
      location: {
        type: "source",
        fileName: "UnionTypes.def",
        line: 116
      },
      kind: "named",
      name: "MultipleDiscriminantUnion"
    })]).then(args => _client.callRemoteFunction("UnionTypes/MDUFunc", "void", args));
  }

  return remoteModule;
}