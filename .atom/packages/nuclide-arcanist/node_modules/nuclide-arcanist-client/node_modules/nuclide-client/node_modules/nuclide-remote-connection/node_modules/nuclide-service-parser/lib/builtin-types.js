Object.defineProperty(exports, '__esModule', {
  value: true
});

/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

exports.locationToString = locationToString;
'use babel';
var builtinLocation = {
  type: 'builtin'
};

exports.builtinLocation = builtinLocation;

function locationToString(location) {
  switch (location.type) {
    case 'source':
      return location.fileName + '(' + location.line + ')';
    case 'builtin':
      return '<builtin>';
    default:
      throw new Error('Bad location type');
  }
}

var anyType = {
  location: builtinLocation,
  kind: 'any'
};

exports.anyType = anyType;
var mixedType = {
  location: builtinLocation,
  kind: 'mixed'
};

exports.mixedType = mixedType;
var stringType = {
  location: builtinLocation,
  kind: 'string'
};

exports.stringType = stringType;
var booleanType = {
  location: builtinLocation,
  kind: 'boolean'
};

exports.booleanType = booleanType;
var numberType = {
  location: builtinLocation,
  kind: 'number'
};

exports.numberType = numberType;
var objectType = {
  location: builtinLocation,
  kind: 'named',
  name: 'Object'
};

exports.objectType = objectType;
var dateType = {
  location: builtinLocation,
  kind: 'named',
  name: 'Date'
};

exports.dateType = dateType;
var regExpType = {
  location: builtinLocation,
  kind: 'named',
  name: 'RegExp'
};

exports.regExpType = regExpType;
var bufferType = {
  location: builtinLocation,
  kind: 'named',
  name: 'Buffer'
};

exports.bufferType = bufferType;
var fsStatsType = {
  location: builtinLocation,
  kind: 'named',
  name: 'fs.Stats'
};

exports.fsStatsType = fsStatsType;
var namedBuiltinTypes = new Set();

exports.namedBuiltinTypes = namedBuiltinTypes;
namedBuiltinTypes.add(objectType.name);
namedBuiltinTypes.add(dateType.name);
namedBuiltinTypes.add(regExpType.name);
namedBuiltinTypes.add(bufferType.name);
namedBuiltinTypes.add(fsStatsType.name);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBwZmw1Mm5wdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLXNlcnZpY2UtcGFyc2VyL2xpYi9idWlsdGluLXR5cGVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxXQUFXLENBQUM7QUFzQkwsSUFBTSxlQUFnQyxHQUFHO0FBQzlDLE1BQUksRUFBRSxTQUFTO0NBQ2hCLENBQUM7Ozs7QUFFSyxTQUFTLGdCQUFnQixDQUFDLFFBQWtCLEVBQVU7QUFDM0QsVUFBUSxRQUFRLENBQUMsSUFBSTtBQUNuQixTQUFLLFFBQVE7QUFDWCxhQUFVLFFBQVEsQ0FBQyxRQUFRLFNBQUksUUFBUSxDQUFDLElBQUksT0FBSTtBQUFBLEFBQ2xELFNBQUssU0FBUztBQUNaLGFBQU8sV0FBVyxDQUFDO0FBQUEsQUFDckI7QUFDRSxZQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFBQSxHQUN4QztDQUNGOztBQUVNLElBQU0sT0FBZ0IsR0FBRztBQUM5QixVQUFRLEVBQUUsZUFBZTtBQUN6QixNQUFJLEVBQUUsS0FBSztDQUNaLENBQUM7OztBQUVLLElBQU0sU0FBb0IsR0FBRztBQUNsQyxVQUFRLEVBQUUsZUFBZTtBQUN6QixNQUFJLEVBQUUsT0FBTztDQUNkLENBQUM7OztBQUVLLElBQU0sVUFBc0IsR0FBRztBQUNwQyxVQUFRLEVBQUUsZUFBZTtBQUN6QixNQUFJLEVBQUUsUUFBUTtDQUNmLENBQUM7OztBQUVLLElBQU0sV0FBd0IsR0FBRztBQUN0QyxVQUFRLEVBQUUsZUFBZTtBQUN6QixNQUFJLEVBQUUsU0FBUztDQUNoQixDQUFDOzs7QUFFSyxJQUFNLFVBQXNCLEdBQUc7QUFDcEMsVUFBUSxFQUFFLGVBQWU7QUFDekIsTUFBSSxFQUFFLFFBQVE7Q0FDZixDQUFDOzs7QUFFSyxJQUFNLFVBQXFCLEdBQUc7QUFDbkMsVUFBUSxFQUFFLGVBQWU7QUFDekIsTUFBSSxFQUFFLE9BQU87QUFDYixNQUFJLEVBQUUsUUFBUTtDQUNmLENBQUM7OztBQUVLLElBQU0sUUFBbUIsR0FBRztBQUNqQyxVQUFRLEVBQUUsZUFBZTtBQUN6QixNQUFJLEVBQUUsT0FBTztBQUNiLE1BQUksRUFBRSxNQUFNO0NBQ2IsQ0FBQzs7O0FBRUssSUFBTSxVQUFxQixHQUFHO0FBQ25DLFVBQVEsRUFBRSxlQUFlO0FBQ3pCLE1BQUksRUFBRSxPQUFPO0FBQ2IsTUFBSSxFQUFFLFFBQVE7Q0FDZixDQUFDOzs7QUFFSyxJQUFNLFVBQXFCLEdBQUc7QUFDbkMsVUFBUSxFQUFFLGVBQWU7QUFDekIsTUFBSSxFQUFFLE9BQU87QUFDYixNQUFJLEVBQUUsUUFBUTtDQUNmLENBQUM7OztBQUVLLElBQU0sV0FBc0IsR0FBRztBQUNwQyxVQUFRLEVBQUUsZUFBZTtBQUN6QixNQUFJLEVBQUUsT0FBTztBQUNiLE1BQUksRUFBRSxVQUFVO0NBQ2pCLENBQUM7OztBQUVLLElBQU0saUJBQThCLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQzs7O0FBRXhELGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDdkMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNyQyxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3ZDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDdkMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyIsImZpbGUiOiIvdmFyL2ZvbGRlcnMveGYvcnNwaDRfYzU3MzE1cnM1N3h4c2Rza3J4bnYzNnQwL1QvdG1wcGZsNTJucHVibGlzaF9wYWNrYWdlcy9ucG0vbnVjbGlkZS1zZXJ2aWNlLXBhcnNlci9saWIvYnVpbHRpbi10eXBlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnO1xuLyogQGZsb3cgKi9cblxuLypcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgaW5cbiAqIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCB0eXBlIHtcbiAgTG9jYXRpb24sXG4gIEJ1aWx0aW5Mb2NhdGlvbixcbiAgU3RyaW5nVHlwZSxcbiAgTnVtYmVyVHlwZSxcbiAgQm9vbGVhblR5cGUsXG4gIEFueVR5cGUsXG4gIE1peGVkVHlwZSxcbiAgTmFtZWRUeXBlLFxufSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IGJ1aWx0aW5Mb2NhdGlvbjogQnVpbHRpbkxvY2F0aW9uID0ge1xuICB0eXBlOiAnYnVpbHRpbicsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gbG9jYXRpb25Ub1N0cmluZyhsb2NhdGlvbjogTG9jYXRpb24pOiBzdHJpbmcge1xuICBzd2l0Y2ggKGxvY2F0aW9uLnR5cGUpIHtcbiAgICBjYXNlICdzb3VyY2UnOlxuICAgICAgcmV0dXJuIGAke2xvY2F0aW9uLmZpbGVOYW1lfSgke2xvY2F0aW9uLmxpbmV9KWA7XG4gICAgY2FzZSAnYnVpbHRpbic6XG4gICAgICByZXR1cm4gJzxidWlsdGluPic7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcignQmFkIGxvY2F0aW9uIHR5cGUnKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgYW55VHlwZTogQW55VHlwZSA9IHtcbiAgbG9jYXRpb246IGJ1aWx0aW5Mb2NhdGlvbixcbiAga2luZDogJ2FueScsXG59O1xuXG5leHBvcnQgY29uc3QgbWl4ZWRUeXBlOiBNaXhlZFR5cGUgPSB7XG4gIGxvY2F0aW9uOiBidWlsdGluTG9jYXRpb24sXG4gIGtpbmQ6ICdtaXhlZCcsXG59O1xuXG5leHBvcnQgY29uc3Qgc3RyaW5nVHlwZTogU3RyaW5nVHlwZSA9IHtcbiAgbG9jYXRpb246IGJ1aWx0aW5Mb2NhdGlvbixcbiAga2luZDogJ3N0cmluZycsXG59O1xuXG5leHBvcnQgY29uc3QgYm9vbGVhblR5cGU6IEJvb2xlYW5UeXBlID0ge1xuICBsb2NhdGlvbjogYnVpbHRpbkxvY2F0aW9uLFxuICBraW5kOiAnYm9vbGVhbicsXG59O1xuXG5leHBvcnQgY29uc3QgbnVtYmVyVHlwZTogTnVtYmVyVHlwZSA9IHtcbiAgbG9jYXRpb246IGJ1aWx0aW5Mb2NhdGlvbixcbiAga2luZDogJ251bWJlcicsXG59O1xuXG5leHBvcnQgY29uc3Qgb2JqZWN0VHlwZTogTmFtZWRUeXBlID0ge1xuICBsb2NhdGlvbjogYnVpbHRpbkxvY2F0aW9uLFxuICBraW5kOiAnbmFtZWQnLFxuICBuYW1lOiAnT2JqZWN0Jyxcbn07XG5cbmV4cG9ydCBjb25zdCBkYXRlVHlwZTogTmFtZWRUeXBlID0ge1xuICBsb2NhdGlvbjogYnVpbHRpbkxvY2F0aW9uLFxuICBraW5kOiAnbmFtZWQnLFxuICBuYW1lOiAnRGF0ZScsXG59O1xuXG5leHBvcnQgY29uc3QgcmVnRXhwVHlwZTogTmFtZWRUeXBlID0ge1xuICBsb2NhdGlvbjogYnVpbHRpbkxvY2F0aW9uLFxuICBraW5kOiAnbmFtZWQnLFxuICBuYW1lOiAnUmVnRXhwJyxcbn07XG5cbmV4cG9ydCBjb25zdCBidWZmZXJUeXBlOiBOYW1lZFR5cGUgPSB7XG4gIGxvY2F0aW9uOiBidWlsdGluTG9jYXRpb24sXG4gIGtpbmQ6ICduYW1lZCcsXG4gIG5hbWU6ICdCdWZmZXInLFxufTtcblxuZXhwb3J0IGNvbnN0IGZzU3RhdHNUeXBlOiBOYW1lZFR5cGUgPSB7XG4gIGxvY2F0aW9uOiBidWlsdGluTG9jYXRpb24sXG4gIGtpbmQ6ICduYW1lZCcsXG4gIG5hbWU6ICdmcy5TdGF0cycsXG59O1xuXG5leHBvcnQgY29uc3QgbmFtZWRCdWlsdGluVHlwZXM6IFNldDxzdHJpbmc+ID0gbmV3IFNldCgpO1xuXG5uYW1lZEJ1aWx0aW5UeXBlcy5hZGQob2JqZWN0VHlwZS5uYW1lKTtcbm5hbWVkQnVpbHRpblR5cGVzLmFkZChkYXRlVHlwZS5uYW1lKTtcbm5hbWVkQnVpbHRpblR5cGVzLmFkZChyZWdFeHBUeXBlLm5hbWUpO1xubmFtZWRCdWlsdGluVHlwZXMuYWRkKGJ1ZmZlclR5cGUubmFtZSk7XG5uYW1lZEJ1aWx0aW5UeXBlcy5hZGQoZnNTdGF0c1R5cGUubmFtZSk7XG4iXX0=
