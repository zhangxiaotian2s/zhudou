'use babel';

/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var TestSuiteModel = require('../lib/TestSuiteModel');

describe('TestSuiteModel', function () {
  var testClassSummaries = [{ id: 1, fileName: 'foo', className: 'foo', name: 'foo' }, { id: 2, fileName: 'bar', className: 'bar', name: 'bar' }];

  var badTestRun = {
    duration: 0.1,
    name: 'foo',
    numAssertions: 1,
    numFailures: 0,
    numSkipped: 0,
    status: 3
  };

  var goodTestRun = {
    duration: 1.1,
    name: 'foo',
    numAssertions: 1,
    numFailures: 0,
    numSkipped: 0,
    status: 2,
    test_json: testClassSummaries[0]
  };

  it('maps test class IDs from a Array<TestClassSummary>', function () {
    var model = new TestSuiteModel(testClassSummaries);
    var testClassSummary = testClassSummaries[0];
    expect(model.testClasses.get(testClassSummary['id'])).toBe(testClassSummary);
  });

  it('calculates progress percent', function () {
    var model = new TestSuiteModel(testClassSummaries);
    model.addTestRun(goodTestRun);
    expect(model.progressPercent()).toBe(50);
  });

  it('handles bad test runs (invalid syntax in test file, for example)', function () {
    var model = new TestSuiteModel(testClassSummaries);
    expect(model.addTestRun.bind(model, badTestRun)).not.toThrow();

    // The bad test run has no ID and so is not added to the TestSuiteModel's summary.
    expect(model.testRuns.size).toBe(0);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy96aGFuZ3hpYW90aWFuLy5hdG9tL3BhY2thZ2VzL251Y2xpZGUtdGVzdC1ydW5uZXIvc3BlYy9UZXN0U3VpdGVNb2RlbC1zcGVjLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFdBQVcsQ0FBQzs7Ozs7Ozs7OztBQVdaLElBQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDOztBQUV4RCxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsWUFBTTtBQUMvQixNQUFNLGtCQUFrQixHQUFHLENBQ3pCLEVBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBQyxFQUN2RCxFQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUMsQ0FDeEQsQ0FBQzs7QUFFRixNQUFNLFVBQVUsR0FBRztBQUNqQixZQUFRLEVBQUUsR0FBRztBQUNiLFFBQUksRUFBRSxLQUFLO0FBQ1gsaUJBQWEsRUFBRSxDQUFDO0FBQ2hCLGVBQVcsRUFBRSxDQUFDO0FBQ2QsY0FBVSxFQUFFLENBQUM7QUFDYixVQUFNLEVBQUUsQ0FBQztHQUNWLENBQUM7O0FBRUYsTUFBTSxXQUFXLEdBQUc7QUFDbEIsWUFBUSxFQUFFLEdBQUc7QUFDYixRQUFJLEVBQUUsS0FBSztBQUNYLGlCQUFhLEVBQUUsQ0FBQztBQUNoQixlQUFXLEVBQUUsQ0FBQztBQUNkLGNBQVUsRUFBRSxDQUFDO0FBQ2IsVUFBTSxFQUFFLENBQUM7QUFDVCxhQUFTLEVBQUUsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO0dBQ2pDLENBQUM7O0FBRUYsSUFBRSxDQUFDLG9EQUFvRCxFQUFFLFlBQU07QUFDN0QsUUFBTSxLQUFLLEdBQUcsSUFBSSxjQUFjLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUNyRCxRQUFNLGdCQUFnQixHQUFHLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQy9DLFVBQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7R0FDOUUsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyw2QkFBNkIsRUFBRSxZQUFNO0FBQ3RDLFFBQU0sS0FBSyxHQUFHLElBQUksY0FBYyxDQUFDLGtCQUFrQixDQUFDLENBQUM7QUFDckQsU0FBSyxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUM5QixVQUFNLENBQUMsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0dBQzFDLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsa0VBQWtFLEVBQUUsWUFBTTtBQUMzRSxRQUFNLEtBQUssR0FBRyxJQUFJLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0FBQ3JELFVBQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUM7OztBQUcvRCxVQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7R0FDckMsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6Ii9Vc2Vycy96aGFuZ3hpYW90aWFuLy5hdG9tL3BhY2thZ2VzL251Y2xpZGUtdGVzdC1ydW5uZXIvc3BlYy9UZXN0U3VpdGVNb2RlbC1zcGVjLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBiYWJlbCc7XG4vKiBAZmxvdyAqL1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIGxpY2Vuc2UgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBpblxuICogdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgVGVzdFN1aXRlTW9kZWwgPSByZXF1aXJlKCcuLi9saWIvVGVzdFN1aXRlTW9kZWwnKTtcblxuZGVzY3JpYmUoJ1Rlc3RTdWl0ZU1vZGVsJywgKCkgPT4ge1xuICBjb25zdCB0ZXN0Q2xhc3NTdW1tYXJpZXMgPSBbXG4gICAge2lkOiAxLCBmaWxlTmFtZTogJ2ZvbycsIGNsYXNzTmFtZTogJ2ZvbycsIG5hbWU6ICdmb28nfSxcbiAgICB7aWQ6IDIsIGZpbGVOYW1lOiAnYmFyJywgY2xhc3NOYW1lOiAnYmFyJywgbmFtZTogJ2Jhcid9LFxuICBdO1xuXG4gIGNvbnN0IGJhZFRlc3RSdW4gPSB7XG4gICAgZHVyYXRpb246IDAuMSxcbiAgICBuYW1lOiAnZm9vJyxcbiAgICBudW1Bc3NlcnRpb25zOiAxLFxuICAgIG51bUZhaWx1cmVzOiAwLFxuICAgIG51bVNraXBwZWQ6IDAsXG4gICAgc3RhdHVzOiAzLFxuICB9O1xuXG4gIGNvbnN0IGdvb2RUZXN0UnVuID0ge1xuICAgIGR1cmF0aW9uOiAxLjEsXG4gICAgbmFtZTogJ2ZvbycsXG4gICAgbnVtQXNzZXJ0aW9uczogMSxcbiAgICBudW1GYWlsdXJlczogMCxcbiAgICBudW1Ta2lwcGVkOiAwLFxuICAgIHN0YXR1czogMixcbiAgICB0ZXN0X2pzb246IHRlc3RDbGFzc1N1bW1hcmllc1swXSxcbiAgfTtcblxuICBpdCgnbWFwcyB0ZXN0IGNsYXNzIElEcyBmcm9tIGEgQXJyYXk8VGVzdENsYXNzU3VtbWFyeT4nLCAoKSA9PiB7XG4gICAgY29uc3QgbW9kZWwgPSBuZXcgVGVzdFN1aXRlTW9kZWwodGVzdENsYXNzU3VtbWFyaWVzKTtcbiAgICBjb25zdCB0ZXN0Q2xhc3NTdW1tYXJ5ID0gdGVzdENsYXNzU3VtbWFyaWVzWzBdO1xuICAgIGV4cGVjdChtb2RlbC50ZXN0Q2xhc3Nlcy5nZXQodGVzdENsYXNzU3VtbWFyeVsnaWQnXSkpLnRvQmUodGVzdENsYXNzU3VtbWFyeSk7XG4gIH0pO1xuXG4gIGl0KCdjYWxjdWxhdGVzIHByb2dyZXNzIHBlcmNlbnQnLCAoKSA9PiB7XG4gICAgY29uc3QgbW9kZWwgPSBuZXcgVGVzdFN1aXRlTW9kZWwodGVzdENsYXNzU3VtbWFyaWVzKTtcbiAgICBtb2RlbC5hZGRUZXN0UnVuKGdvb2RUZXN0UnVuKTtcbiAgICBleHBlY3QobW9kZWwucHJvZ3Jlc3NQZXJjZW50KCkpLnRvQmUoNTApO1xuICB9KTtcblxuICBpdCgnaGFuZGxlcyBiYWQgdGVzdCBydW5zIChpbnZhbGlkIHN5bnRheCBpbiB0ZXN0IGZpbGUsIGZvciBleGFtcGxlKScsICgpID0+IHtcbiAgICBjb25zdCBtb2RlbCA9IG5ldyBUZXN0U3VpdGVNb2RlbCh0ZXN0Q2xhc3NTdW1tYXJpZXMpO1xuICAgIGV4cGVjdChtb2RlbC5hZGRUZXN0UnVuLmJpbmQobW9kZWwsIGJhZFRlc3RSdW4pKS5ub3QudG9UaHJvdygpO1xuXG4gICAgLy8gVGhlIGJhZCB0ZXN0IHJ1biBoYXMgbm8gSUQgYW5kIHNvIGlzIG5vdCBhZGRlZCB0byB0aGUgVGVzdFN1aXRlTW9kZWwncyBzdW1tYXJ5LlxuICAgIGV4cGVjdChtb2RlbC50ZXN0UnVucy5zaXplKS50b0JlKDApO1xuICB9KTtcbn0pO1xuIl19
//# sourceURL=/Users/zhangxiaotian/.atom/packages/nuclide-test-runner/spec/TestSuiteModel-spec.js
